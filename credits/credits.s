;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_sprintf
	.import		_tgi_setcolor
	.import		_tgi_setpalette
	.import		_tgi_line
	.import		_tgi_ioctl
	.import		_joy_masks
	.export		_creditsbg_redir
	.export		_creditsbg_pal
	.export		_tutorialbg_redir
	.export		_tutorialbg_pal
	.export		_grid_redir
	.export		_grid_pal
	.import		_textxy
	.import		_checkInput
	.import		_creditsbg
	.import		_tutorialbg
	.import		_marks000000
	.import		_marks000001
	.import		_pressA000000
	.import		_pressA001000
	.import		_tuttxt
	.import		_reset
	.export		_spMarks
	.export		_marktype
	.export		_markstate
	.import		_grid
	.import		_saveptr
	.export		_creditstxt
	.export		_sp_credits
	.export		_sp_mark
	.export		_sp_pressA
	.export		_sp_tutorial
	.export		_sp_rankgrid
	.export		_updatemarks
	.export		_drawmarks
	.export		_credits
	.export		_tutorial
	.export		_showHistory
	.export		_showHistory2P
	.export		_stats

.segment	"CREDITS_DATA"

_creditsbg_redir:
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_creditsbg_pal:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$05
	.byte	$02
	.byte	$07
	.byte	$05
	.byte	$09
	.byte	$09
	.byte	$0B
	.byte	$0B
	.byte	$0D
	.byte	$0D
	.byte	$0F
	.byte	$00
	.byte	$03
	.byte	$04
	.byte	$06
	.byte	$0A
	.byte	$44
	.byte	$0D
	.byte	$77
	.byte	$0F
	.byte	$88
	.byte	$1F
	.byte	$BB
	.byte	$4F
	.byte	$3F
	.byte	$DD
	.byte	$FF
_tutorialbg_redir:
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_tutorialbg_pal:
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$02
	.byte	$00
	.byte	$04
	.byte	$02
	.byte	$05
	.byte	$09
	.byte	$0C
	.byte	$0F
	.byte	$0F
	.byte	$0F
	.byte	$0F
	.byte	$00
	.byte	$21
	.byte	$31
	.byte	$32
	.byte	$33
	.byte	$42
	.byte	$4F
	.byte	$63
	.byte	$39
	.byte	$85
	.byte	$B8
	.byte	$DC
	.byte	$FF
	.byte	$FF
	.byte	$FF
	.byte	$FF
_grid_redir:
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_grid_pal:
	.byte	$01
	.byte	$01
	.byte	$02
	.byte	$02
	.byte	$03
	.byte	$03
	.byte	$04
	.byte	$04
	.byte	$08
	.byte	$09
	.byte	$0A
	.byte	$0A
	.byte	$04
	.byte	$0F
	.byte	$0A
	.byte	$0C
	.byte	$10
	.byte	$22
	.byte	$30
	.byte	$33
	.byte	$45
	.byte	$46
	.byte	$47
	.byte	$58
	.byte	$0C
	.byte	$0D
	.byte	$AA
	.byte	$AA
	.byte	$3E
	.byte	$FF
	.byte	$0E
	.byte	$5F
_spMarks:
	.addr	_marks000000
	.addr	_marks000001
_marktype:
	.byte	$00
	.byte	$01
	.byte	$02
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$01
	.byte	$02
_markstate:
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$00
	.byte	$01
	.byte	$00
_creditstxt:
	.byte	$34,$54,$54,$55,$44,$45,$2F,$61,$6E,$20,$61,$64,$76,$61,$6E,$63
	.byte	$65,$64,$20,$33,$44,$2F,$54,$69,$63,$2D,$54,$61,$63,$2D,$54,$6F
	.byte	$65,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$00
	.byte	$41,$74,$61,$72,$69,$20,$4C,$79,$6E,$78,$20,$33,$30,$74,$68,$2F
	.byte	$62,$69,$72,$74,$68,$64,$61,$79,$20,$63,$6F,$64,$69,$6E,$67,$2F
	.byte	$63,$6F,$6D,$70,$65,$74,$69,$74,$69,$6F,$6E,$00
	.byte	$45,$6E,$67,$69,$6E,$65,$20,$63,$6F,$72,$65,$20,$62,$79,$2F,$44
	.byte	$61,$6E,$20,$47,$69,$73,$73,$65,$6C,$75,$69,$73,$74,$2F,$47,$50
	.byte	$4C,$20,$76,$33,$20,$20,$20,$20,$20,$20,$00
	.res	1,$00
	.byte	$47,$61,$6D,$65,$20,$63,$6F,$6E,$63,$65,$70,$74,$2F,$61,$6E,$64
	.byte	$20,$4C,$79,$6E,$78,$2F,$63,$6F,$64,$69,$6E,$67,$20,$62,$79,$2F
	.byte	$4E,$4F,$50,$39,$30,$20,$20,$20,$20,$20,$20,$00
	.byte	$47,$46,$58,$20,$64,$65,$73,$69,$67,$6E,$20,$62,$79,$2F,$4D,$61
	.byte	$72,$74,$69,$61,$6C,$20,$44,$61,$76,$69,$61,$75,$64,$2F,$28,$4D
	.byte	$41,$52,$53,$53,$29,$20,$20,$20,$20,$20,$20,$00
	.byte	$4D,$75,$73,$69,$63,$20,$61,$64,$61,$70,$74,$65,$64,$2F,$66,$72
	.byte	$6F,$6D,$20,$70,$75,$62,$6C,$69,$63,$2F,$64,$6F,$6D,$61,$69,$6E
	.byte	$20,$74,$75,$6E,$65,$73,$20,$20,$20,$20,$20,$00
	.byte	$4D,$65,$6E,$75,$20,$74,$75,$6E,$65,$2F,$4D,$6F,$6F,$6E,$67,$61
	.byte	$7A,$65,$72,$2F,$62,$79,$20,$44,$72,$2E,$20,$41,$77,$65,$73,$6F
	.byte	$6D,$65,$20,$20,$20,$20,$20,$20,$20,$20,$20,$00
	.byte	$54,$75,$6E,$65,$20,$31,$2F,$57,$61,$74,$65,$72,$20,$52,$65,$73
	.byte	$69,$73,$74,$2F,$62,$79,$20,$41,$63,$65,$20,$6F,$66,$2F,$54,$68
	.byte	$65,$20,$5A,$79,$6E,$61,$70,$73,$20,$20,$20,$00
	.byte	$54,$75,$6E,$65,$20,$32,$2F,$52,$61,$69,$6E,$62,$6F,$77,$2F,$62
	.byte	$79,$20,$42,$61,$72,$6F,$71,$75,$65,$20,$20,$20,$20,$20,$20,$20
	.byte	$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$00
	.byte	$54,$75,$6E,$65,$20,$33,$2F,$56,$6F,$6C,$63,$61,$6E,$6F,$2F,$62
	.byte	$79,$20,$4C,$65,$6F,$6E,$20,$61,$6E,$64,$2F,$45,$78,$63,$65,$73
	.byte	$73,$20,$20,$20,$20,$20,$20,$20,$20,$20,$20,$00
	.byte	$4F,$72,$69,$67,$69,$6E,$61,$6C,$20,$74,$75,$6E,$65,$73,$2F,$61
	.byte	$72,$65,$20,$6F,$6E,$2F,$6D,$6F,$64,$61,$72,$63,$68,$69,$76,$65
	.byte	$2E,$6F,$72,$67,$20,$20,$20,$20,$20,$20,$20,$00
	.byte	$74,$68,$65,$20,$64,$69,$67,$69,$74,$61,$6C,$2F,$63,$6F,$70,$79
	.byte	$20,$6F,$66,$20,$74,$68,$69,$73,$2F,$67,$61,$6D,$65,$20,$69,$73
	.byte	$20,$66,$72,$65,$65,$20,$20,$20,$20,$20,$20,$00
	.byte	$63,$61,$6E,$20,$62,$65,$20,$66,$72,$65,$65,$6C,$79,$2F,$70,$75
	.byte	$62,$6C,$69,$73,$68,$65,$64,$20,$6F,$6E,$2F,$77,$65,$62,$20,$73
	.byte	$69,$74,$65,$73,$20,$20,$20,$20,$20,$20,$20,$00
	.byte	$6F,$72,$20,$69,$6E,$20,$64,$69,$67,$69,$74,$61,$6C,$2F,$4C,$79
	.byte	$6E,$78,$20,$67,$61,$6D,$65,$2F,$63,$6F,$6D,$70,$69,$6C,$61,$74
	.byte	$69,$6F,$6E,$73,$20,$20,$20,$20,$20,$20,$20,$00
	.byte	$44,$69,$73,$74,$72,$69,$62,$75,$74,$69,$6F,$6E,$20,$61,$73,$2F
	.byte	$4C,$79,$6E,$78,$20,$63,$61,$72,$64,$2F,$69,$73,$20,$72,$65,$73
	.byte	$65,$72,$76,$65,$64,$20,$20,$20,$20,$20,$20,$00
	.byte	$4C,$65,$61,$76,$65,$20,$63,$6F,$6D,$6D,$65,$6E,$74,$73,$2F,$6F
	.byte	$6E,$20,$61,$74,$61,$72,$69,$61,$67,$65,$2E,$63,$6F,$6D,$2F,$66
	.byte	$6F,$72,$75,$6D,$21,$20,$20,$20,$20,$20,$20,$00
_sp_credits:
	.byte	$C0
	.byte	$10
	.byte	$01
	.word	$0000
	.addr	_creditsbg
	.word	$0000
	.word	$0000
	.word	$0100
	.word	$0100
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_sp_mark:
	.byte	$C4
	.byte	$10
	.byte	$01
	.word	$0000
	.addr	_marks000000
	.word	$003F
	.word	$0010
	.word	$0100
	.word	$0100
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_sp_pressA:
	.byte	$C4
	.byte	$10
	.byte	$01
	.word	$0000
	.addr	_pressA000000
	.word	$0082
	.word	$005F
	.word	$0100
	.word	$0100
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_sp_tutorial:
	.byte	$C0
	.byte	$10
	.byte	$01
	.word	$0000
	.addr	_tutorialbg
	.word	$0000
	.word	$0000
	.word	$0100
	.word	$0100
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_sp_rankgrid:
	.byte	$C0
	.byte	$10
	.byte	$01
	.word	$0000
	.addr	_grid
	.word	$0000
	.word	$0000
	.word	$0100
	.word	$0100
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF

.segment	"CREDITS_RODATA"

L021A:
	.byte	$53,$6C,$6F,$74,$20,$25,$69,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$52,$61,$6E,$6B,$20,$25,$69,$00
L03AA:
	.byte	$3C,$20,$53,$6C,$6F,$74,$20,$25,$69,$20,$3E,$20,$20,$20,$20,$52
	.byte	$61,$6E,$6B,$20,$25,$69,$00
L0224:
	.byte	$53,$6C,$6F,$74,$20,$25,$69,$20,$20,$20,$20,$20,$20,$20,$20,$20
	.byte	$45,$6D,$70,$74,$79,$00
L03B4:
	.byte	$3C,$20,$53,$6C,$6F,$74,$20,$25,$69,$20,$3E,$20,$20,$20,$20,$45
	.byte	$6D,$70,$74,$79,$00
L031A:
	.byte	$52,$61,$6E,$6B,$20,$50,$32,$20,$25,$69,$00
L02C0:
	.byte	$52,$61,$6E,$6B,$20,$50,$31,$20,$25,$69,$00
L01AE:
	.byte	$50,$61,$67,$65,$20,$25,$69,$00
L0395:
	.byte	$47,$61,$6D,$65,$73,$00
L0205	:=	L0395+0
L039C:
	.byte	$32,$35,$34,$2B,$00
L020C	:=	L039C+0
L02DC	:=	L021A+21
L0211	:=	L021A+21
L02AE:
	.byte	$50,$31,$00
L0236	:=	L021A+21
L03A1	:=	L021A+21
L02D3	:=	L021A+21
L02B3:
	.byte	$50,$32,$00
L03C6	:=	L021A+21
L03CF	:=	L021A+21
L023F	:=	L021A+21

; ---------------------------------------------------------------
; void __near__ updatemarks (unsigned int)
; ---------------------------------------------------------------

.segment	"CREDITS_CODE"

.proc	_updatemarks: near

.segment	"CREDITS_CODE"

	jsr     ldax0sp
	jsr     shrax1
	jsr     pushax
	lda     #$09
	jsr     tosumoda0
	jsr     pusha
	lda     #<(_markstate)
	ldx     #>(_markstate)
	clc
	adc     (sp)
	bcc     L0117
	inx
L0117:	jsr     pushax
	lda     #$01
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	tay
	lda     _markstate,y
	jsr     tossuba0
	ldy     #$00
	jsr     staspidx
	jmp     incsp3

.endproc

; ---------------------------------------------------------------
; void __near__ drawmarks (void)
; ---------------------------------------------------------------

.segment	"CREDITS_CODE"

.proc	_drawmarks: near

.segment	"CREDITS_CODE"

	jsr     decsp2
	lda     #$00
L0449:	sta     (sp)
	cmp     #$03
	bcc     L044A
	jmp     incsp2
L044A:	lda     #$00
	ldy     #$01
L0448:	sta     (sp),y
	cmp     #$03
	jcs     L011E
	ldx     #$00
	lda     (sp)
	jsr     mulax3
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L043D
	inx
L043D:	sta     ptr1
	txa
	clc
	adc     #>(_markstate)
	sta     ptr1+1
	ldy     #<(_markstate)
	lda     (ptr1),y
	jeq     L0126
	ldx     #$00
	lda     (sp)
	jsr     mulax3
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L043E
	inx
L043E:	sta     ptr1
	txa
	clc
	adc     #>(_marktype)
	sta     ptr1+1
	ldy     #<(_marktype)
	lda     (ptr1),y
	cmp     #$02
	bcs     L0126
	ldy     #$01
	lda     (sp),y
	jsr     pusha0
	lda     #$19
	jsr     tosumula0
	ldy     #$0C
	jsr     incaxy
	sta     _sp_mark+7
	stx     _sp_mark+7+1
	lda     (sp)
	jsr     pusha0
	lda     #$19
	jsr     tosumula0
	ldy     #$11
	jsr     incaxy
	sta     _sp_mark+9
	stx     _sp_mark+9+1
	ldx     #$00
	lda     (sp)
	jsr     mulax3
	sta     ptr1
	stx     ptr1+1
	ldy     #$01
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L043F
	inx
L043F:	sta     ptr1
	txa
	clc
	adc     #>(_marktype)
	sta     ptr1+1
	ldy     #<(_marktype)
	ldx     #$00
	lda     (ptr1),y
	asl     a
	bcc     L0440
	inx
	clc
L0440:	adc     #<(_spMarks)
	tay
	txa
	adc     #>(_spMarks)
	tax
	tya
	jsr     ldaxi
	sta     _sp_mark+5
	stx     _sp_mark+5+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_mark)
	ldx     #>(_sp_mark)
	jsr     _tgi_ioctl
L0126:	ldy     #$01
	lda     (sp),y
	ina
	jmp     L0448
L011E:	lda     (sp)
	ina
	jmp     L0449

.endproc

; ---------------------------------------------------------------
; void __near__ credits (void)
; ---------------------------------------------------------------

.segment	"CREDITS_CODE"

.proc	_credits: near

.segment	"CREDITS_CODE"

	lda     #$00
	jsr     pusha
	jsr     pusha
	ina
	jsr     pusha
	jsr     pusha
	ldy     #$2B
	jsr     subysp
	jsr     push0
	jsr     decsp2
	lda     #$00
	ldy     #$2F
	sta     (sp),y
	lda     #$0F
	ldy     #$00
	jmp     L044C
L0149:	ldy     #$02
	lda     (sp),y
	iny
	ora     (sp),y
	bne     L0451
	ldy     #$01
L045A:	sta     (sp),y
	cmp     #$2C
	bcs     L044F
	lda     #$04
	jsr     leaa0sp
	sta     ptr1
	stx     ptr1+1
	lda     (sp),y
	tay
	lda     #$20
	sta     (ptr1),y
	ldy     #$01
	lda     (sp),y
	ina
	bra     L045A
L044F:	lda     #$00
	sta     (sp),y
	lda     (sp)
	ina
	and     #$0F
	sta     (sp)
L0451:	ldy     #$02
	lda     (sp),y
	and     #$0F
	beq     L0164
	lda     (sp),y
	and     #$01
	beq     L0166
	ldy     #$05
	jsr     pushwysp
	jsr     _updatemarks
L0166:	ldy     #$01
	lda     (sp),y
	cmp     #$2B
	bcs     L0453
	lda     #$04
	jsr     leaa0sp
	clc
	adc     (sp),y
	bcc     L016E
	inx
L016E:	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$2C
	jsr     tosmula0
	clc
	adc     #<(_creditstxt)
	sta     ptr1
	txa
	adc     #>(_creditstxt)
	sta     ptr1+1
	ldy     #$03
	lda     (sp),y
	tay
	lda     (ptr1),y
	ldy     #$00
	jsr     staspidx
	ldy     #$01
L0453:	lda     (sp),y
	ina
	sta     (sp),y
L0164:	ldy     #$03
	jsr     ldaxysp
	ina
	bne     L0174
	inx
L0174:	ldy     #$02
	jsr     staxysp
	ldy     #$01
	lda     (sp),y
	cmp     #$81
	lda     #$00
	bcc     L0454
	tax
	iny
	jsr     staxysp
L0454:	jsr     pusha
	lda     #<(_sp_credits)
	ldx     #>(_sp_credits)
	jsr     _tgi_ioctl
	jsr     _drawmarks
	lda     #$5D
	jsr     pusha0
	lda     #$22
	jsr     pusha0
	lda     #$08
	jsr     leaa0sp
	jsr     pushax
	jsr     _textxy
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L0186:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0186
	lda     #<(_creditsbg_pal)
	ldx     #>(_creditsbg_pal)
	jsr     _tgi_setpalette
	jsr     _checkInput
	ldy     #$30
	sta     (sp),y
	lda     _joy_masks+4
	and     (sp),y
	pha
	pla
	beq     L045B
	dey
	lda     (sp),y
	bne     L018E
	ina
	ldy     #$31
	sta     (sp),y
	ldy     #$2F
	sta     (sp),y
L018E:	iny
L045B:	lda     (sp),y
	bne     L014B
	dey
L044C:	sta     (sp),y
L014B:	ldy     #$31
	lda     (sp),y
	bne     L044B
	lda     _reset
	jeq     L0149
L044B:	ldy     #$33
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ tutorial (void)
; ---------------------------------------------------------------

.segment	"CREDITS_CODE"

.proc	_tutorial: near

.segment	"CREDITS_CODE"

	lda     #$00
	jsr     pusha
	jsr     pusha
	ina
	jsr     pusha
	jsr     pusha
	ldy     #$0E
	jsr     subysp
	jmp     L01A5
L01A3:	jsr     pusha
	lda     #<(_sp_tutorial)
	ldx     #>(_sp_tutorial)
	jsr     _tgi_ioctl
	lda     sp
	ldx     sp+1
	jsr     pushax
	lda     #<(L01AE)
	ldx     #>(L01AE)
	jsr     pushax
	ldy     #$15
	ldx     #$00
	lda     (sp),y
	ina
	bne     L01B1
	inx
L01B1:	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	lda     #$7C
	jsr     pusha0
	lda     #$17
	jsr     pusha0
	lda     #$04
	jsr     leaa0sp
	jsr     pushax
	jsr     _textxy
	lda     #$0A
	jsr     pusha0
	lda     #$20
	jsr     pusha0
	ldy     #$15
	lda     (sp),y
	asl     a
	bcc     L045E
	ldx     #$01
	clc
L045E:	adc     #<(_tuttxt)
	tay
	txa
	adc     #>(_tuttxt)
	tax
	tya
	jsr     pushw
	jsr     _textxy
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L01C0:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L01C0
	lda     #<(_tutorialbg_pal)
	ldx     #>(_tutorialbg_pal)
	jsr     _tgi_setpalette
	jsr     _checkInput
	ldy     #$0F
	sta     (sp),y
	lda     _joy_masks+4
	and     (sp),y
	pha
	pla
	beq     L01C8
	dey
	lda     (sp),y
	bne     L01C8
	ina
	ldy     #$10
	sta     (sp),y
	ldy     #$0E
	sta     (sp),y
L01C8:	lda     _joy_masks+3
	ldy     #$0F
	and     (sp),y
	pha
	pla
	beq     L01D3
	ldy     #$11
	lda     (sp),y
	cmp     #$0F
	bcs     L01D3
	ldy     #$0E
	lda     (sp),y
	bne     L01D3
	ldy     #$11
	lda     (sp),y
	ina
	sta     (sp),y
	lda     #$01
	ldy     #$0E
	sta     (sp),y
L01D3:	lda     _joy_masks+2
	ldy     #$0F
	and     (sp),y
	pha
	pla
	beq     L0468
	ldy     #$11
	lda     (sp),y
	beq     L01DD
	ldy     #$0E
	lda     (sp),y
	bne     L01DD
	ldy     #$11
	lda     (sp),y
	dea
	sta     (sp),y
	lda     #$01
	ldy     #$0E
	sta     (sp),y
L01DD:	ldy     #$0F
L0468:	lda     (sp),y
	bne     L01A5
	dey
	sta     (sp),y
L01A5:	ldy     #$10
	lda     (sp),y
	bne     L045D
	lda     _reset
	jeq     L01A3
L045D:	ldy     #$12
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ showHistory (unsigned char)
; ---------------------------------------------------------------

.segment	"CREDITS_CODE"

.proc	_showHistory: near

.segment	"CREDITS_CODE"

	ldy     #$15
	jsr     subysp
	lda     #$01
	jsr     pusha
	jsr     decsp2
	lda     #$00
	jsr     pusha
	jsr     pusha
	ina
	jsr     pusha
	jmp     L01F3
L01F1:	lda     #$0D
	jsr     _tgi_setcolor
	lda     #$00
	jsr     pusha
	lda     #<(_sp_rankgrid)
	ldx     #>(_sp_rankgrid)
	jsr     _tgi_ioctl
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$1D
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     incax8
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	ldy     #$03
	sta     (sp),y
	lda     (sp),y
	jeq     L0200
	lda     #$50
	jsr     pusha0
	lda     #$01
	jsr     pusha0
	lda     #<(L0205)
	ldx     #>(L0205)
	jsr     pushax
	jsr     _textxy
	ldy     #$03
	lda     (sp),y
	cmp     #$FF
	bne     L0207
	lda     #$6A
	jsr     pusha0
	lda     #$01
	jsr     pusha0
	lda     #<(L020C)
	ldx     #>(L020C)
	bra     L0474
L0207:	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L0211)
	ldx     #>(L0211)
	jsr     pushax
	ldy     #$07
	lda     (sp),y
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	lda     #$6A
	jsr     pusha0
	lda     #$01
	jsr     pusha0
	lda     #$0A
	jsr     leaa0sp
L0474:	jsr     pushax
	jsr     _textxy
	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L021A)
	ldx     #>(L021A)
	jsr     pushax
	ldy     #$1F
	ldx     #$00
	lda     (sp),y
	ina
	bne     L021D
	inx
L021D:	jsr     pushax
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$23
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	ldy     #$09
	jsr     incaxy
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$18
	jsr     tosudiva0
	jsr     pushax
	ldy     #$08
	bra     L046B
L0200:	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L0224)
	ldx     #>(L0224)
	jsr     pushax
	ldy     #$1F
	ldx     #$00
	lda     (sp),y
	ina
	bne     L0227
	inx
L0227:	jsr     pushax
	ldy     #$06
L046B:	jsr     _sprintf
	lda     #$01
	jsr     pusha0
	jsr     pusha0
	lda     #$0A
	jsr     leaa0sp
	jsr     pushax
	jsr     _textxy
	lda     #$01
	ldy     #$04
L0475:	sta     (sp),y
	cmp     #$0A
	bcs     L022D
	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L0236)
	ldx     #>(L0236)
	jsr     pushax
	ldy     #$08
	lda     (sp),y
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	lda     #$1F
	jsr     pusha0
	lda     #$5B
	jsr     pusha0
	ldy     #$08
	lda     (sp),y
	jsr     shlax3
	jsr     tossubax
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	jsr     pushax
	jsr     _textxy
	ldy     #$04
	lda     (sp),y
	ina
	bra     L0475
L022D:	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L023F)
	ldx     #>(L023F)
	jsr     pushax
	lda     #$0A
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	lda     #$1B
	jsr     pusha0
	lda     #$0B
	jsr     pusha0
	dea
	jsr     leaa0sp
	jsr     pushax
	jsr     _textxy
	ldy     #$03
	lda     (sp),y
	jeq     L0267
	cmp     #$26
	jcs     L0471
	lda     #$29
	jsr     pusha0
	lda     #$5F
	jsr     pusha0
	lda     #$2B
	jsr     pusha0
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$25
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	ldy     #$0A
	jsr     incaxy
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     _tgi_line
	lda     #$00
	ldy     #$04
L0478:	sta     (sp),y
	lda     (sp),y
	jsr     pusha0
	ldy     #$05
	lda     (sp),y
	jsr     decax1
	jsr     tosicmp
	jcs     L0267
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     incaxy
	jsr     pushax
	ldy     #$23
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     pushax
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$2E
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0E
	ldx     #$00
	lda     (sp),y
	ldy     #$0B
	jsr     incaxy
	jsr     pushax
	ldy     #$27
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     _tgi_line
	ldy     #$04
	lda     (sp),y
	ina
	jmp     L0478
L0471:	lda     #$00
	iny
L0476:	sta     (sp),y
	cmp     #$26
	jcs     L0267
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$28
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     incaxy
	jsr     pushax
	ldy     #$23
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     pushax
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0E
	ldx     #$00
	lda     (sp),y
	ldy     #$0B
	jsr     incaxy
	jsr     pushax
	ldy     #$27
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     _tgi_line
	ldy     #$04
	lda     (sp),y
	ina
	jmp     L0476
L0267:	ldy     #$01
	lda     (sp),y
	pha
	ina
	sta     (sp),y
	pla
	and     #$10
	beq     L0279
	lda     #<(_pressA000000)
	sta     _sp_pressA+5
	lda     #>(_pressA000000)
	bra     L046C
L0279:	lda     #<(_pressA001000)
	sta     _sp_pressA+5
	lda     #>(_pressA001000)
L046C:	sta     _sp_pressA+5+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_pressA)
	ldx     #>(_sp_pressA)
	jsr     _tgi_ioctl
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L0288:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0288
	lda     #<(_grid_pal)
	ldx     #>(_grid_pal)
	jsr     _tgi_setpalette
	jsr     _checkInput
	ldy     #$05
	sta     (sp),y
	lda     (sp),y
	beq     L0477
	lda     (sp)
	bne     L0290
	ina
	ldy     #$02
	sta     (sp),y
L0290:	ldy     #$05
L0477:	lda     (sp),y
	bne     L01F3
	sta     (sp)
L01F3:	ldy     #$02
	lda     (sp),y
	bne     L0469
	lda     _reset
	jeq     L01F1
L0469:	ldy     #$1C
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ showHistory2P (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"CREDITS_CODE"

.proc	_showHistory2P: near

.segment	"CREDITS_CODE"

	ldy     #$15
	jsr     subysp
	lda     #$01
	jsr     pusha
	jsr     decsp2
	lda     #$00
	jsr     pusha
	jsr     pusha
	ina
	jsr     pusha
	jmp     L02A2
L02A0:	lda     #$0D
	jsr     _tgi_setcolor
	lda     #$00
	jsr     pusha
	lda     #<(_sp_rankgrid)
	ldx     #>(_sp_rankgrid)
	jsr     _tgi_ioctl
	lda     #$05
	jsr     pusha0
	lda     #$26
	jsr     pusha0
	lda     #<(L02AE)
	ldx     #>(L02AE)
	jsr     pushax
	jsr     _textxy
	lda     #$05
	jsr     pusha0
	lda     #$30
	jsr     pusha0
	lda     #<(L02B3)
	ldx     #>(L02B3)
	jsr     pushax
	jsr     _textxy
	lda     #$0F
	jsr     pusha0
	lda     #$2A
	jsr     pusha0
	lda     #$19
	jsr     pusha0
	lda     #$2A
	jsr     _tgi_line
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$1E
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     incax8
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	ldy     #$03
	sta     (sp),y
	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L02C0)
	ldx     #>(L02C0)
	jsr     pushax
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$22
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	ldy     #$09
	jsr     incaxy
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$18
	jsr     tosudiva0
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	lda     #$01
	jsr     pusha0
	jsr     pusha0
	lda     #$0A
	jsr     leaa0sp
	jsr     pushax
	jsr     _textxy
	lda     #$01
	ldy     #$04
L0487:	sta     (sp),y
	cmp     #$0A
	bcs     L02CA
	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L02D3)
	ldx     #>(L02D3)
	jsr     pushax
	ldy     #$08
	lda     (sp),y
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	lda     #$1F
	jsr     pusha0
	lda     #$5B
	jsr     pusha0
	ldy     #$08
	lda     (sp),y
	jsr     shlax3
	jsr     tossubax
	jsr     pushax
	lda     #$0A
	jsr     leaa0sp
	jsr     pushax
	jsr     _textxy
	ldy     #$04
	lda     (sp),y
	ina
	bra     L0487
L02CA:	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L02DC)
	ldx     #>(L02DC)
	jsr     pushax
	lda     #$0A
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	lda     #$1B
	jsr     pusha0
	lda     #$0B
	jsr     pusha0
	dea
	jsr     leaa0sp
	jsr     pushax
	jsr     _textxy
	ldy     #$03
	lda     (sp),y
	cmp     #$26
	jcs     L047F
	lda     #$29
	jsr     pusha0
	lda     #$5F
	jsr     pusha0
	lda     #$2B
	jsr     pusha0
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$26
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	ldy     #$0A
	jsr     incaxy
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     _tgi_line
	lda     #$00
	ldy     #$04
L048B:	sta     (sp),y
	lda     (sp),y
	jsr     pusha0
	ldy     #$05
	lda     (sp),y
	jsr     decax1
	jsr     tosicmp
	jcs     L0302
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     incaxy
	jsr     pushax
	ldy     #$24
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     pushax
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$2E
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0E
	ldx     #$00
	lda     (sp),y
	ldy     #$0B
	jsr     incaxy
	jsr     pushax
	ldy     #$28
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     _tgi_line
	ldy     #$04
	lda     (sp),y
	ina
	jmp     L048B
L047F:	lda     #$00
	iny
L0488:	sta     (sp),y
	cmp     #$26
	jcs     L0302
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$28
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     incaxy
	jsr     pushax
	ldy     #$24
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     pushax
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0E
	ldx     #$00
	lda     (sp),y
	ldy     #$0B
	jsr     incaxy
	jsr     pushax
	ldy     #$28
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     _tgi_line
	ldy     #$04
	lda     (sp),y
	ina
	jmp     L0488
L0302:	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$1D
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     incax8
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	ldy     #$03
	sta     (sp),y
	lda     #$06
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L031A)
	ldx     #>(L031A)
	jsr     pushax
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$21
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	ldy     #$09
	jsr     incaxy
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$18
	jsr     tosudiva0
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	lda     #$33
	jsr     pusha0
	lda     #$01
	jsr     pusha0
	lda     #$0A
	jsr     leaa0sp
	jsr     pushax
	jsr     _textxy
	lda     #$0C
	jsr     _tgi_setcolor
	lda     #$0F
	jsr     pusha0
	lda     #$34
	jsr     pusha0
	lda     #$19
	jsr     pusha0
	lda     #$34
	jsr     _tgi_line
	ldy     #$03
	lda     (sp),y
	cmp     #$26
	jcs     L0484
	lda     #$29
	jsr     pusha0
	lda     #$5F
	jsr     pusha0
	lda     #$2B
	jsr     pusha0
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$25
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	ldy     #$0A
	jsr     incaxy
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     _tgi_line
	lda     #$00
	ldy     #$04
L048C:	sta     (sp),y
	lda     (sp),y
	jsr     pusha0
	ldy     #$05
	lda     (sp),y
	jsr     decax1
	jsr     tosicmp
	jcs     L0349
	ldy     #$04
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     incaxy
	jsr     pushax
	ldy     #$23
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     pushax
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$2E
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0E
	ldx     #$00
	lda     (sp),y
	ldy     #$0B
	jsr     incaxy
	jsr     pushax
	ldy     #$27
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     _tgi_line
	ldy     #$04
	lda     (sp),y
	ina
	jmp     L048C
L0484:	lda     #$00
	iny
L0489:	sta     (sp),y
	cmp     #$26
	jcs     L0349
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$28
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     incaxy
	jsr     pushax
	ldy     #$23
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     pushax
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0E
	ldx     #$00
	lda     (sp),y
	ldy     #$0B
	jsr     incaxy
	jsr     pushax
	ldy     #$27
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     _tgi_line
	ldy     #$04
	lda     (sp),y
	ina
	jmp     L0489
L0349:	ldy     #$01
	lda     (sp),y
	pha
	ina
	sta     (sp),y
	pla
	and     #$10
	beq     L035B
	lda     #<(_pressA000000)
	sta     _sp_pressA+5
	lda     #>(_pressA000000)
	bra     L047A
L035B:	lda     #<(_pressA001000)
	sta     _sp_pressA+5
	lda     #>(_pressA001000)
L047A:	sta     _sp_pressA+5+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_pressA)
	ldx     #>(_sp_pressA)
	jsr     _tgi_ioctl
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L036A:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L036A
	lda     #<(_grid_pal)
	ldx     #>(_grid_pal)
	jsr     _tgi_setpalette
	jsr     _checkInput
	ldy     #$05
	sta     (sp),y
	lda     (sp),y
	beq     L048A
	lda     (sp)
	bne     L0372
	ina
	ldy     #$02
	sta     (sp),y
L0372:	ldy     #$05
L048A:	lda     (sp),y
	bne     L02A2
	sta     (sp)
L02A2:	ldy     #$02
	lda     (sp),y
	bne     L0479
	lda     _reset
	jeq     L02A0
L0479:	ldy     #$1D
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; void __near__ stats (void)
; ---------------------------------------------------------------

.segment	"CREDITS_CODE"

.proc	_stats: near

.segment	"CREDITS_CODE"

	ldy     #$15
	jsr     subysp
	lda     #$01
	jsr     pusha
	jsr     decsp2
	lda     #$00
	jsr     pusha
	jsr     pusha
	jmp     L0383
L0381:	lda     #$0D
	jsr     _tgi_setcolor
	lda     #$00
	jsr     pusha
	lda     #<(_sp_rankgrid)
	ldx     #>(_sp_rankgrid)
	jsr     _tgi_ioctl
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$03
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     incax8
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	ldy     #$02
	sta     (sp),y
	lda     (sp),y
	jeq     L0390
	lda     #$50
	jsr     pusha0
	lda     #$01
	jsr     pusha0
	lda     #<(L0395)
	ldx     #>(L0395)
	jsr     pushax
	jsr     _textxy
	ldy     #$02
	lda     (sp),y
	cmp     #$FF
	bne     L0397
	lda     #$6A
	jsr     pusha0
	lda     #$01
	jsr     pusha0
	lda     #<(L039C)
	ldx     #>(L039C)
	bra     L04A0
L0397:	lda     #$05
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L03A1)
	ldx     #>(L03A1)
	jsr     pushax
	ldy     #$06
	lda     (sp),y
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	lda     #$6A
	jsr     pusha0
	lda     #$01
	jsr     pusha0
	lda     #$09
	jsr     leaa0sp
L04A0:	jsr     pushax
	jsr     _textxy
	lda     #$05
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L03AA)
	ldx     #>(L03AA)
	jsr     pushax
	ldy     #$05
	ldx     #$00
	lda     (sp),y
	ina
	bne     L03AD
	inx
L03AD:	jsr     pushax
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	ldy     #$09
	jsr     incaxy
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$18
	jsr     tosudiva0
	jsr     pushax
	ldy     #$08
	bra     L0491
L0390:	lda     #$05
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L03B4)
	ldx     #>(L03B4)
	jsr     pushax
	ldy     #$05
	ldx     #$00
	lda     (sp),y
	ina
	bne     L03B7
	inx
L03B7:	jsr     pushax
	ldy     #$06
L0491:	jsr     _sprintf
	lda     #$01
	jsr     pusha0
	jsr     pusha0
	lda     #$09
	jsr     leaa0sp
	jsr     pushax
	jsr     _textxy
	lda     #$01
	ldy     #$03
L04A1:	sta     (sp),y
	cmp     #$0A
	bcs     L03BD
	lda     #$05
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L03C6)
	ldx     #>(L03C6)
	jsr     pushax
	ldy     #$07
	lda     (sp),y
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	lda     #$1F
	jsr     pusha0
	lda     #$5B
	jsr     pusha0
	ldy     #$07
	lda     (sp),y
	jsr     shlax3
	jsr     tossubax
	jsr     pushax
	lda     #$09
	jsr     leaa0sp
	jsr     pushax
	jsr     _textxy
	ldy     #$03
	lda     (sp),y
	ina
	bra     L04A1
L03BD:	lda     #$05
	jsr     leaa0sp
	jsr     pushax
	lda     #<(L03CF)
	ldx     #>(L03CF)
	jsr     pushax
	lda     #$0A
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	lda     #$1B
	jsr     pusha0
	lda     #$0B
	jsr     pusha0
	lda     #$09
	jsr     leaa0sp
	jsr     pushax
	jsr     _textxy
	ldy     #$02
	lda     (sp),y
	jeq     L03F7
	cmp     #$26
	jcs     L0496
	lda     #$29
	jsr     pusha0
	lda     #$5F
	jsr     pusha0
	lda     #$2B
	jsr     pusha0
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0B
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	ldy     #$0A
	jsr     incaxy
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     _tgi_line
	lda     #$00
	ldy     #$03
L04A3:	sta     (sp),y
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     decax1
	jsr     tosicmp
	jcs     L03F7
	ldy     #$03
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	iny
	jsr     incaxy
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     pushax
	ldy     #$07
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$2E
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0D
	ldx     #$00
	lda     (sp),y
	ldy     #$0B
	jsr     incaxy
	jsr     pushax
	ldy     #$0D
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     _tgi_line
	ldy     #$03
	lda     (sp),y
	ina
	jmp     L04A3
L0496:	lda     #$00
	iny
L04A2:	sta     (sp),y
	cmp     #$26
	jcs     L03F7
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$28
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	iny
	jsr     incaxy
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     pushax
	ldy     #$07
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$5F
	jsr     pusha0
	lda     _saveptr
	ldx     _saveptr+1
	jsr     pushax
	ldy     #$0D
	ldx     #$00
	lda     (sp),y
	ldy     #$0B
	jsr     incaxy
	jsr     pushax
	ldy     #$0D
	lda     (sp),y
	jsr     pusha0
	lda     #$28
	jsr     tosumula0
	jsr     tosaddax
	jsr     tosaddax
	sta     ptr1
	stx     ptr1+1
	lda     (ptr1)
	jsr     pusha0
	lda     #$03
	jsr     tosudiva0
	jsr     tossubax
	jsr     _tgi_line
	ldy     #$03
	lda     (sp),y
	ina
	jmp     L04A2
L03F7:	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L040E:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L040E
	lda     #<(_grid_pal)
	ldx     #>(_grid_pal)
	jsr     _tgi_setpalette
	bra     L0416
L0414:	jsr     _checkInput
	ldy     #$04
	sta     (sp),y
L0416:	ldy     #$04
	lda     (sp),y
	beq     L0499
	lda     _reset
	beq     L0414
	bra     L0499
L041C:	jsr     _checkInput
	ldy     #$04
	sta     (sp),y
L0499:	lda     (sp),y
	bne     L0420
	lda     _reset
	beq     L041C
L0420:	ldx     #$00
	lda     _joy_masks+3
	and     (sp),y
	pha
	pla
	beq     L049D
	ldy     #$01
	lda     (sp),y
	ina
	bne     L042C
	inx
L042C:	jsr     pushax
	lda     #$03
	jsr     tosumoda0
	ldy     #$01
	sta     (sp),y
	ldx     #$00
L049D:	lda     _joy_masks+2
	ldy     #$04
	and     (sp),y
	pha
	pla
	beq     L049F
	ldy     #$01
	lda     (sp),y
	jsr     incax2
	jsr     pushax
	lda     #$03
	jsr     tosumoda0
	ldy     #$01
	sta     (sp),y
L049F:	lda     _joy_masks+4
	ldy     #$04
	and     (sp),y
	pha
	pla
	beq     L0383
	lda     #$01
	sta     (sp)
L0383:	lda     (sp)
	bne     L048F
	lda     _reset
	jeq     L0381
L048F:	ldy     #$1A
	jmp     addysp

.endproc

