;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_sprintf
	.import		_lynx_load
	.import		_tgi_setpalette
	.import		_tgi_ioctl
	.import		_joy_masks
	.import		_gb2_reset
	.import		_coordtoint2
	.import		_legal2
	.import		_gb2_place
	.import		_gb2_gameover
	.import		_cs2_init
	.import		_cs2_place
	.import		_netSendData
	.import		_netReceiveData
	.import		_netListen
	.import		_netConnect
	.export		_gfx2_redir
	.export		_gfx2_pal
	.import		_textxy
	.import		_checkInput
	.import		_play_Tune
	.import		_play_PCM
	.import		_lynx_snd_play
	.import		_lynx_snd_stop
	.import		_stopPCMSample
	.export		_brd2
	.export		_cs2
	.export		_posx2
	.export		_posy2
	.export		_posz2
	.export		_moves2
	.export		_oldmusic
	.export		_keypressed
	.export		_gbuf2
	.export		_oldflipflop2
	.export		_lastplayed2
	.export		_gridoffset2
	.import		_background2
	.import		_grid02
	.import		_gridSmall2
	.import		_cursor02
	.import		_cursor12
	.import		_tile12
	.import		_tile22
	.import		_dot02
	.import		_dot12
	.import		_dot22
	.import		_dleft2
	.import		_dright2
	.import		_reset
	.import		_musicEnabled
	.import		_altview
	.import		_lastmove
	.import		_ingame
	.import		_flipflop
	.import		_tunenum
	.import		_musicptr
	.import		_SAMPLE0_FILENR
	.import		_SAMPLE1_FILENR
	.import		_SAMPLE2_FILENR
	.import		_TUNE1_FILENR
	.import		_TUNE2_FILENR
	.import		_TUNE3_FILENR
	.export		_sp_bg2
	.export		_sp_grid2
	.export		_sp_gridsmall2
	.export		_sp_tile2
	.export		_newRank2
	.export		_getmove2
	.export		_drawBoard2
	.export		_changeTune
	.export		_netgame
	.export		_game2P

.segment	"GAME2P_DATA"

_gfx2_redir:
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_gfx2_pal:
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$05
	.byte	$04
	.byte	$07
	.byte	$06
	.byte	$0B
	.byte	$0A
	.byte	$0B
	.byte	$0D
	.byte	$0E
	.byte	$0E
	.byte	$0F
	.byte	$0F
	.byte	$33
	.byte	$0C
	.byte	$0F
	.byte	$39
	.byte	$52
	.byte	$3E
	.byte	$53
	.byte	$39
	.byte	$42
	.byte	$36
	.byte	$4E
	.byte	$5C
	.byte	$1B
	.byte	$8F
	.byte	$FF
	.byte	$FF
_sp_bg2:
	.byte	$C0
	.byte	$10
	.byte	$01
	.word	$0000
	.addr	_background2
	.word	$0000
	.word	$0000
	.word	$0100
	.word	$0100
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_sp_grid2:
	.byte	$C4
	.byte	$08
	.byte	$01
	.word	$0000
	.addr	_grid02
	.word	$0000
	.word	$0000
	.res	8,$00
_sp_gridsmall2:
	.byte	$C4
	.byte	$08
	.byte	$01
	.word	$0000
	.addr	_gridSmall2
	.word	$0000
	.word	$0000
	.res	8,$00
_sp_tile2:
	.byte	$C4
	.byte	$08
	.byte	$01
	.word	$0000
	.addr	_cursor02
	.word	$0000
	.word	$0000
	.res	8,$00

.segment	"GAME2P_RODATA"

L02F1:
	.byte	$50,$72,$65,$73,$73,$20,$42,$20,$74,$6F,$20,$63,$61,$6E,$63,$65
	.byte	$6C,$00
L02EA:
	.byte	$57,$41,$49,$54,$49,$4E,$47,$20,$50,$4C,$41,$59,$45,$52,$20,$32
	.byte	$00
L051C:
	.byte	$59,$6F,$75,$72,$20,$72,$61,$6E,$6B,$00
L0411	:=	L051C+0
L03F4:
	.byte	$59,$6F,$75,$72,$20,$74,$75,$72,$6E,$00
L06E1:
	.byte	$55,$6E,$72,$61,$6E,$6B,$65,$64,$00
L04FF:
	.byte	$4F,$70,$70,$6F,$6E,$65,$6E,$74,$00
L0582:
	.byte	$59,$6F,$75,$20,$6C,$6F,$73,$65,$00
L0745:
	.byte	$50,$32,$20,$77,$69,$6E,$73,$00
L0416:
	.byte	$76,$73,$20,$72,$61,$6E,$6B,$00
L06C9:
	.byte	$50,$32,$20,$72,$61,$6E,$6B,$00
L06C4:
	.byte	$50,$31,$20,$72,$61,$6E,$6B,$00
L0521	:=	L0416+0
L06A5:
	.byte	$50,$32,$20,$74,$75,$72,$6E,$00
L069F:
	.byte	$50,$31,$20,$74,$75,$72,$6E,$00
L057A:
	.byte	$59,$6F,$75,$20,$77,$69,$6E,$00
L073D:
	.byte	$50,$31,$20,$77,$69,$6E,$73,$00
L058F:
	.byte	$50,$72,$65,$73,$73,$20,$41,$00
L0752	:=	L058F+0
L074B:
	.byte	$45,$76,$65,$6E,$00
L0509:
	.byte	$4D,$6F,$76,$65,$00
L06AF:
	.byte	$6D,$6F,$76,$65,$00
L03FE	:=	L06AF+0
L0588	:=	L074B+0
L050D:
	.byte	$25,$69,$00
L06CD	:=	L050D+0
L06D6	:=	L050D+0
L0525	:=	L050D+0
L0423	:=	L050D+0
L041A	:=	L050D+0
L052E	:=	L050D+0
L06B3	:=	L050D+0
L0402	:=	L050D+0

.segment	"GAME2P_BSS"

_brd2:
	.res	75,$00
_cs2:
	.res	686,$00
_posx2:
	.res	1,$00
_posy2:
	.res	1,$00
_posz2:
	.res	1,$00
_moves2:
	.res	1,$00
_oldmusic:
	.res	1,$00
_keypressed:
	.res	1,$00
_gbuf2:
	.res	5,$00
_oldflipflop2:
	.res	1,$00
_lastplayed2:
	.res	128,$00
_gridoffset2:
	.res	1,$00

; ---------------------------------------------------------------
; unsigned char __near__ newRank2 (unsigned char, unsigned char, unsigned char, int)
; ---------------------------------------------------------------

.segment	"GAME2P_CODE"

.proc	_newRank2: near

.segment	"GAME2P_CODE"

	jsr     decsp2
	ldy     #$04
	lda     (sp),y
	cmp     #$01
	jne     L0075
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	dey
	cmp     (sp),y
	jcs     L0077
	lda     (sp),y
	sec
	iny
	sbc     (sp),y
	cmp     #$15
	bcc     L0079
	ldy     #$03
	jsr     ldaxysp
	cmp     #$15
	txa
	sbc     #$00
	bvc     L007E
	eor     #$80
L007E:	bpl     L007C
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$1E
	jsr     incaxy
	jmp     L0792
L007C:	ldy     #$03
	jsr     ldaxysp
	cmp     #$29
	txa
	sbc     #$00
	bvc     L0085
	eor     #$80
L0085:	bpl     L0083
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$14
	jsr     incaxy
	jmp     L0792
L0083:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$0A
	jsr     incaxy
	jmp     L0792
L0079:	dey
	lda     (sp),y
	sec
	iny
	sbc     (sp),y
	cmp     #$0B
	bcc     L008E
	ldy     #$03
	jsr     ldaxysp
	cmp     #$15
	txa
	sbc     #$00
	bvc     L0093
	eor     #$80
L0093:	bpl     L0091
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$14
	jsr     incaxy
	jmp     L0792
L0091:	ldy     #$03
	jsr     ldaxysp
	cmp     #$29
	txa
	sbc     #$00
	bvc     L009A
	eor     #$80
L009A:	bpl     L0098
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$0A
	jsr     incaxy
	jmp     L0792
L0098:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     incax5
	jmp     L0792
L008E:	ldy     #$03
	jsr     ldaxysp
	cmp     #$15
	txa
	sbc     #$00
	bvc     L00A5
	eor     #$80
L00A5:	bpl     L00A3
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$0F
	jsr     incaxy
	jmp     L0792
L00A3:	ldy     #$03
	jsr     ldaxysp
	cmp     #$29
	txa
	sbc     #$00
	bvc     L00AC
	eor     #$80
L00AC:	bpl     L00AA
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     incax6
	jmp     L0792
L00AA:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     incax3
	jmp     L0792
L0077:	iny
	lda     (sp),y
	sec
	dey
	sbc     (sp),y
	cmp     #$0A
	jcs     L00FE
	iny
	lda     (sp),y
	ina
	jne     L0792
	inx
	jmp     L0792
L0075:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	sec
	dey
	sbc     (sp),y
	jcc     L00C0
	jeq     L00C0
	iny
	lda     (sp),y
	sec
	dey
	sbc     (sp),y
	cmp     #$15
	bcc     L00C2
	ldy     #$03
	jsr     ldaxysp
	cmp     #$15
	txa
	sbc     #$00
	bvc     L00C7
	eor     #$80
L00C7:	bpl     L00C5
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$0F
	jsr     decaxy
	jmp     L0792
L00C5:	ldy     #$03
	jsr     ldaxysp
	cmp     #$29
	txa
	sbc     #$00
	bvc     L00CE
	eor     #$80
L00CE:	bpl     L00CC
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$0A
	jsr     decaxy
	jmp     L0792
L00CC:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     decax5
	jmp     L0792
L00C2:	iny
	lda     (sp),y
	sec
	dey
	sbc     (sp),y
	cmp     #$0B
	bcc     L00D7
	ldy     #$03
	jsr     ldaxysp
	cmp     #$15
	txa
	sbc     #$00
	bvc     L00DC
	eor     #$80
L00DC:	bpl     L00DA
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$0A
	jsr     decaxy
	bra     L0792
L00DA:	ldy     #$03
	jsr     ldaxysp
	cmp     #$29
	txa
	sbc     #$00
	bvc     L00E3
	eor     #$80
L00E3:	bpl     L00E1
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     decax7
	bra     L0792
L00E1:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     decax3
	bra     L0792
L00D7:	ldy     #$03
	jsr     ldaxysp
	cmp     #$15
	txa
	sbc     #$00
	bvc     L00EE
	eor     #$80
L00EE:	bpl     L00EC
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     decax7
	bra     L0792
L00EC:	ldy     #$03
	jsr     ldaxysp
	cmp     #$29
	txa
	sbc     #$00
	bvc     L00F5
	eor     #$80
L00F5:	bpl     L00F3
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     decax4
	bra     L0792
L00F3:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     decax2
	bra     L0792
L00C0:	iny
	lda     (sp),y
	sec
	dey
	sbc     (sp),y
	cmp     #$0A
	bcs     L00FE
	iny
	lda     (sp),y
	jsr     decax1
	bra     L0792
L00FE:	iny
	lda     (sp),y
L0792:	jsr     stax0sp
	cmp     #$FF
	txa
	sbc     #$00
	bvs     L0109
	eor     #$80
L0109:	bpl     L0107
	ldx     #$00
	lda     #$FE
	jsr     stax0sp
L0107:	jsr     ldax0sp
	cpx     #$80
	bcc     L010C
	ldx     #$00
	txa
	jsr     stax0sp
L010C:	ldx     #$00
	lda     (sp)
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; signed char __near__ getmove2 (void)
; ---------------------------------------------------------------

.segment	"GAME2P_CODE"

.proc	_getmove2: near

.segment	"GAME2P_CODE"

	lda     #$01
	jsr     pusha
	jsr     _checkInput
	sta     (sp)
	lda     (sp)
	jsr     pusha0
	lda     _joy_masks+4
	jsr     tosanda0
	cmp     #$00
	beq     L0115
	lda     _keypressed
	bne     L0115
	ina
	sta     _keypressed
	lda     _posx2
	jsr     pusha
	lda     _posy2
	jsr     pusha
	lda     _posz2
	jsr     pusha
	jsr     _coordtoint2
	jmp     incsp1
L0115:	lda     (sp)
	jsr     pusha0
	lda     _joy_masks+3
	jsr     tosanda0
	cmp     #$00
	beq     L0122
	lda     _keypressed
	bne     L0122
	ina
	sta     _keypressed
	lda     _posx2
	ina
	sta     _posx2
	cmp     #$04
	bne     L012D
	stz     _posx2
	lda     _posz2
	bpl     L0135
	ldx     #$FF
L0135:	ina
	bne     L0136
	inx
L0136:	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmoda0
	sta     _posz2
	lda     #<(_SAMPLE1_FILENR)
	ldx     #>(_SAMPLE1_FILENR)
	bra     L07A9
L012D:	lda     #<(_SAMPLE2_FILENR)
	ldx     #>(_SAMPLE2_FILENR)
L07A9:	jsr     pushax
	jsr     _play_PCM
	jmp     L018C
L0122:	lda     (sp)
	jsr     pusha0
	lda     _joy_masks+2
	jsr     tosanda0
	cmp     #$00
	beq     L013D
	lda     _keypressed
	bne     L013D
	ina
	sta     _keypressed
	lda     _posx2
	dea
	sta     _posx2
	cmp     #$FF
	bne     L0148
	lda     #$03
	sta     _posx2
	lda     _posz2
	bpl     L0150
	ldx     #$FF
L0150:	jsr     incax3
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmoda0
	sta     _posz2
	lda     #<(_SAMPLE1_FILENR)
	ldx     #>(_SAMPLE1_FILENR)
	bra     L07AA
L0148:	lda     #<(_SAMPLE2_FILENR)
	ldx     #>(_SAMPLE2_FILENR)
L07AA:	jsr     pushax
	jsr     _play_PCM
	jmp     L018C
L013D:	lda     (sp)
	jsr     pusha0
	lda     _joy_masks
	jsr     tosanda0
	cmp     #$00
	beq     L0157
	lda     _keypressed
	bne     L0157
	ina
	sta     _keypressed
	lda     _posy2
	dea
	sta     _posy2
	cmp     #$FF
	bne     L0162
	lda     #$03
	sta     _posy2
	lda     _posz2
	bpl     L016A
	ldx     #$FF
L016A:	jsr     incax3
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmoda0
	sta     _posz2
	lda     #<(_SAMPLE1_FILENR)
	ldx     #>(_SAMPLE1_FILENR)
	bra     L07AB
L0162:	lda     #<(_SAMPLE2_FILENR)
	ldx     #>(_SAMPLE2_FILENR)
L07AB:	jsr     pushax
	jsr     _play_PCM
	bra     L018C
L0157:	lda     (sp)
	jsr     pusha0
	lda     _joy_masks+1
	jsr     tosanda0
	cmp     #$00
	beq     L0171
	lda     _keypressed
	bne     L0171
	ina
	sta     _keypressed
	lda     _posy2
	ina
	sta     _posy2
	cmp     #$04
	bne     L017C
	stz     _posy2
	lda     _posz2
	bpl     L0184
	ldx     #$FF
L0184:	ina
	bne     L0185
	inx
L0185:	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmoda0
	sta     _posz2
	lda     #<(_SAMPLE1_FILENR)
	ldx     #>(_SAMPLE1_FILENR)
	bra     L07AC
L017C:	lda     #<(_SAMPLE2_FILENR)
	ldx     #>(_SAMPLE2_FILENR)
L07AC:	jsr     pushax
	jsr     _play_PCM
	bra     L018C
L0171:	lda     (sp)
	bne     L018C
	stz     _keypressed
L018C:	ldx     #$FF
	txa
	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; void __near__ drawBoard2 (void)
; ---------------------------------------------------------------

.segment	"GAME2P_CODE"

.proc	_drawBoard2: near

.segment	"GAME2P_CODE"

	jsr     decsp4
	lda     #$00
	jsr     pusha
	lda     #<(_sp_bg2)
	ldx     #>(_sp_bg2)
	jsr     _tgi_ioctl
	ldx     #$00
	lda     _gridoffset2
	ldy     #$49
	jsr     incaxy
	sta     _sp_grid2+7
	stx     _sp_grid2+7+1
	lda     #$0D
	sta     _sp_grid2+9
	stz     _sp_grid2+9+1
	lda     #$00
	ldy     #$03
L07C1:	sta     (sp),y
	cmp     #$04
	bcs     L019A
	lda     #$00
	jsr     pusha
	lda     #<(_sp_grid2)
	ldx     #>(_sp_grid2)
	jsr     _tgi_ioctl
	lda     #$16
	clc
	adc     _sp_grid2+9
	sta     _sp_grid2+9
	bcc     L01A6
	inc     _sp_grid2+9+1
L01A6:	ldy     #$03
	lda     (sp),y
	ina
	bra     L07C1
L019A:	lda     _altview
	jeq     L07C4
	lda     #$83
	sta     _sp_gridsmall2+7
	stz     _sp_gridsmall2+7+1
	lda     #$0D
	sta     _sp_gridsmall2+9
	stz     _sp_gridsmall2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall2)
	ldx     #>(_sp_gridsmall2)
	jsr     _tgi_ioctl
	lda     #$1C
	sta     _sp_gridsmall2+9
	stz     _sp_gridsmall2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall2)
	ldx     #>(_sp_gridsmall2)
	jsr     _tgi_ioctl
	lda     #$2B
	sta     _sp_gridsmall2+9
	stz     _sp_gridsmall2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall2)
	ldx     #>(_sp_gridsmall2)
	jsr     _tgi_ioctl
	lda     #$3A
	sta     _sp_gridsmall2+9
	stz     _sp_gridsmall2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall2)
	ldx     #>(_sp_gridsmall2)
	jsr     _tgi_ioctl
	lda     #$92
	sta     _sp_gridsmall2+7
	stz     _sp_gridsmall2+7+1
	lda     #$0D
	sta     _sp_gridsmall2+9
	stz     _sp_gridsmall2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall2)
	ldx     #>(_sp_gridsmall2)
	jsr     _tgi_ioctl
	lda     #$1C
	sta     _sp_gridsmall2+9
	stz     _sp_gridsmall2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall2)
	ldx     #>(_sp_gridsmall2)
	jsr     _tgi_ioctl
	lda     #$2B
	sta     _sp_gridsmall2+9
	stz     _sp_gridsmall2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall2)
	ldx     #>(_sp_gridsmall2)
	jsr     _tgi_ioctl
	lda     #$3A
	sta     _sp_gridsmall2+9
	stz     _sp_gridsmall2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall2)
	ldx     #>(_sp_gridsmall2)
	jsr     _tgi_ioctl
	lda     #<(_dleft2)
	sta     _sp_tile2+5
	lda     #>(_dleft2)
	sta     _sp_tile2+5+1
	lda     #$83
	sta     _sp_tile2+7
	stz     _sp_tile2+7+1
	lda     #$49
	sta     _sp_tile2+9
	stz     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	lda     #$92
	sta     _sp_tile2+7
	stz     _sp_tile2+7+1
	lda     #$58
	sta     _sp_tile2+9
	stz     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	lda     #<(_dright2)
	sta     _sp_tile2+5
	lda     #>(_dright2)
	sta     _sp_tile2+5+1
	lda     #$83
	sta     _sp_tile2+7
	stz     _sp_tile2+7+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	lda     #$92
	sta     _sp_tile2+7
	stz     _sp_tile2+7+1
	lda     #$49
	sta     _sp_tile2+9
	stz     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	lda     #$00
L07C4:	sta     (sp)
	cmp     #$04
	bcc     L07C5
	jmp     incsp4
L07C5:	lda     #$00
	ldy     #$01
L07C3:	sta     (sp),y
	cmp     #$04
	jcs     L01F5
	lda     #$00
	iny
L07C2:	sta     (sp),y
	cmp     #$04
	jcs     L01FD
	ldx     #$00
	lda     (sp)
	jsr     shlax4
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	dey
	lda     (sp),y
	jsr     shlax2
	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	iny
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L07AF
	inx
L07AF:	sta     ptr1
	txa
	clc
	adc     #>(_brd2+3)
	sta     ptr1+1
	ldy     #<(_brd2+3)
	lda     (ptr1),y
	cmp     #$01
	jne     L0249
	lda     #<(_tile12)
	sta     _sp_tile2+5
	lda     #>(_tile12)
	sta     _sp_tile2+5+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$03
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset2
	bcc     L07AD
	inx
L07AD:	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	lda     _altview
	jeq     L0249
	lda     #<(_dot12)
	sta     _sp_tile2+5
	lda     #>(_dot12)
	sta     _sp_tile2+5+1
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     (sp)
	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	lda     #$0F
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     (sp)
	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	lda     #$03
	sec
	tay
	sbc     (sp),y
	jsr     pusha0
	lda     #$0F
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	dey
	cmp     (sp),y
	jne     L0235
	iny
	lda     (sp),y
	cmp     (sp)
	bne     L022C
	ldy     #$02
	lda     (sp),y
	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$4A
	jsr     incaxy
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L022C:	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$03
	sec
	ldy     #$02
	sbc     (sp),y
	jsr     tosicmp0
	bne     L0235
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$59
	jsr     incaxy
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L0235:	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$03
	sec
	tay
	sbc     (sp),y
	jsr     tosicmp0
	jne     L0249
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	cmp     (sp)
	bne     L0240
	ldy     #$02
	lda     (sp),y
	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	lda     #$62
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L0240:	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$03
	sec
	ldy     #$02
	sbc     (sp),y
	jsr     tosicmp0
	bne     L0249
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	lda     #$53
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L0249:	ldx     #$00
	lda     (sp)
	jsr     shlax4
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	ldy     #$01
	lda     (sp),y
	jsr     shlax2
	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	iny
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L07B3
	inx
L07B3:	sta     ptr1
	txa
	clc
	adc     #>(_brd2+3)
	sta     ptr1+1
	ldy     #<(_brd2+3)
	lda     (ptr1),y
	cmp     #$02
	jne     L0205
	lda     #<(_tile22)
	sta     _sp_tile2+5
	lda     #>(_tile22)
	sta     _sp_tile2+5+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$03
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset2
	bcc     L07AE
	inx
L07AE:	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	lda     _altview
	jeq     L0205
	lda     #<(_dot22)
	sta     _sp_tile2+5
	lda     #>(_dot22)
	sta     _sp_tile2+5+1
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     (sp)
	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	lda     #$0F
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     (sp)
	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	lda     #$03
	sec
	tay
	sbc     (sp),y
	jsr     pusha0
	lda     #$0F
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	dey
	cmp     (sp),y
	jne     L027C
	iny
	lda     (sp),y
	cmp     (sp)
	bne     L0273
	ldy     #$02
	lda     (sp),y
	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$4A
	jsr     incaxy
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L0273:	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$03
	sec
	ldy     #$02
	sbc     (sp),y
	jsr     tosicmp0
	bne     L027C
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$59
	jsr     incaxy
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L027C:	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$03
	sec
	tay
	sbc     (sp),y
	jsr     tosicmp0
	jne     L0205
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	cmp     (sp)
	bne     L0287
	ldy     #$02
	lda     (sp),y
	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	lda     #$62
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L0287:	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$03
	sec
	ldy     #$02
	sbc     (sp),y
	jsr     tosicmp0
	bne     L0205
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	lda     #$53
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L0205:	ldy     #$02
	lda     (sp),y
	ina
	jmp     L07C2
L01FD:	dey
	lda     (sp),y
	ina
	jmp     L07C3
L01F5:	lda     (sp)
	ina
	jmp     L07C4

.endproc

; ---------------------------------------------------------------
; void __near__ changeTune (unsigned char)
; ---------------------------------------------------------------

.segment	"GAME2P_CODE"

.proc	_changeTune: near

.segment	"GAME2P_CODE"

	ldy     #$00
	lda     (sp)
	cmp     #$03
	bne     L029A
	lda     _musicEnabled
	beq     L02A3
	jsr     _lynx_snd_stop
	stz     _musicEnabled
	lda     #$02
	sta     _tunenum
	jmp     incsp1
L029A:	jsr     _stopPCMSample
	ldy     #$00
	lda     (sp)
	sta     _tunenum
	lda     _musicEnabled
	beq     L07C7
	jsr     _lynx_snd_stop
	bra     L02AA
L07C7:	ina
	sta     _musicEnabled
L02AA:	lda     _tunenum
	bne     L07C8
	lda     #<(_TUNE1_FILENR)
	ldx     #>(_TUNE1_FILENR)
	bra     L07C6
L07C8:	lda     _tunenum
	cmp     #$01
	bne     L07C9
	lda     #<(_TUNE2_FILENR)
	ldx     #>(_TUNE2_FILENR)
L07C6:	jsr     _lynx_load
L07C9:	lda     _tunenum
	cmp     #$02
	bne     L02B6
	lda     #<(_TUNE3_FILENR)
	ldx     #>(_TUNE3_FILENR)
	jsr     _lynx_load
L02B6:	lda     #$00
	jsr     pusha
	lda     _musicptr
	ldx     _musicptr+1
	jsr     _lynx_snd_play
	lda     #$01
	jsr     pusha
	lda     _musicptr+2
	ldx     _musicptr+2+1
	jsr     _lynx_snd_play
	lda     #$02
	jsr     pusha
	lda     _musicptr+4
	ldx     _musicptr+4+1
	jsr     _lynx_snd_play
L02A3:	jmp     incsp1

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ netgame (unsigned char)
; ---------------------------------------------------------------

.segment	"GAME2P_CODE"

.proc	_netgame: near

.segment	"GAME2P_CODE"

	jsr     decsp5
	lda     #$01
	jsr     pusha
	jsr     pusha
	dea
	jsr     pusha
	lda     #$20
	jsr     pusha
	ldx     #$FF
	txa
	jsr     pushax
	lda     #$01
	sta     _ingame
	jsr     _play_Tune
	lda     _musicEnabled
	beq     L02CC
	lda     _tunenum
	bra     L07DE
L02CC:	lda     #$03
L07DE:	sta     _oldmusic
	sta     _brd2+74
	jsr     _netConnect
	tax
	beq     L07EC
	lda     #$02
	ldy     #$0A
	sta     (sp),y
	jmp     L02DF
L07EC:	ina
	ldy     #$0A
	sta     (sp),y
	jmp     L081A
L02DE:	jsr     pusha
	lda     #<(_sp_bg2)
	ldx     #>(_sp_bg2)
	jsr     _tgi_ioctl
	lda     #$30
	jsr     pusha0
	lda     #$28
	jsr     pusha0
	lda     #<(L02EA)
	ldx     #>(L02EA)
	jsr     pushax
	jsr     _textxy
	ldy     #$02
	lda     (sp),y
	pha
	ina
	sta     (sp),y
	pla
	and     #$20
	beq     L02EC
	lda     #$31
	jsr     pusha0
	lda     #$5D
	jsr     pusha0
	lda     #<(L02F1)
	ldx     #>(L02F1)
	jsr     pushax
	jsr     _textxy
L02EC:	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L02F8:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L02F8
	lda     #<(_gfx2_pal)
	ldx     #>(_gfx2_pal)
	jsr     _tgi_setpalette
	jsr     _checkInput
	ldy     #$05
	sta     (sp),y
	ldx     #$00
	lda     _joy_masks+5
	and     (sp),y
	pha
	pla
	beq     L07ED
	stz     _ingame
	jmp     L07E0
L07ED:	lda     (sp),y
	bne     L02E0
L081A:	ldy     #$04
	sta     (sp),y
L02E0:	jsr     _netListen
	tax
	bne     L02DF
	lda     _reset
	jeq     L02DE
L02DF:	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	jsr     _gb2_reset
	lda     #<(_cs2)
	ldx     #>(_cs2)
	jsr     pushax
	jsr     _cs2_init
	stz     _posx2
	stz     _posy2
	stz     _posz2
	lda     #$01
	sta     _moves2
	ldy     #$0A
	lda     (sp),y
	cmp     #$01
	bne     L0318
	lda     #$FF
	sta     _brd2+68
	sta     _brd2+67
	stz     _brd2+71
	stz     _brd2+72
	stz     _brd2+73
	lda     _musicEnabled
	beq     L07EF
	lda     _tunenum
	bra     L07E1
L07EF:	lda     #$03
L07E1:	sta     _brd2+74
	iny
	lda     (sp),y
	sta     _brd2+69
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     #$4B
	jsr     pusha
	jsr     _netSendData
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     #$4B
	jsr     pusha
	jsr     _netReceiveData
	bra     L0336
L0318:	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     #$4B
	jsr     pusha
	jsr     _netReceiveData
	ldy     #$0B
	lda     (sp),y
	sta     _brd2+70
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     #$4B
	jsr     pusha
	jsr     _netSendData
L0336:	lda     _brd2+74
	sta     _oldmusic
	jsr     pusha
	jsr     _changeTune
	jmp     L0348
L0346:	ldy     #$0A
	lda     (sp),y
	cmp     _brd2
	jeq     L034E
L07F0:	lda     _flipflop
	sta     _oldflipflop2
	lda     _altview
	beq     L07F1
	lda     #$00
	bra     L07E2
L07F1:	lda     #$1A
L07E2:	sta     _gridoffset2
	jsr     _drawBoard2
	lda     _lastmove
	jeq     L035D
	ldx     _brd2+68
	jmi     L035D
	lda     _brd2+68
	and     #$03
	ldy     #$09
	sta     (sp),y
	ldx     #$00
	lda     _brd2+68
	bpl     L0368
	dex
L0368:	jsr     asrax2
	and     #$03
	dey
	sta     (sp),y
	ldx     #$00
	lda     _brd2+68
	bpl     L036C
	dex
L036C:	jsr     asrax4
	and     #$03
	dey
	sta     (sp),y
	lda     #<(_cursor12)
	sta     _sp_tile2+5
	lda     #>(_cursor12)
	sta     _sp_tile2+5+1
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset2
	bcc     L07CA
	inx
L07CA:	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L035D:	lda     _lastmove
	jeq     L0376
	ldx     _brd2+67
	jmi     L0376
	lda     _brd2+67
	and     #$03
	ldy     #$09
	sta     (sp),y
	ldx     #$00
	lda     _brd2+67
	bpl     L0381
	dex
L0381:	jsr     asrax2
	and     #$03
	dey
	sta     (sp),y
	ldx     #$00
	lda     _brd2+67
	bpl     L0385
	dex
L0385:	jsr     asrax4
	and     #$03
	dey
	sta     (sp),y
	lda     #<(_cursor12)
	sta     _sp_tile2+5
	lda     #>(_cursor12)
	sta     _sp_tile2+5+1
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset2
	bcc     L07CB
	inx
L07CB:	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L0376:	lda     #<(_cursor02)
	sta     _sp_tile2+5
	lda     #>(_cursor02)
	sta     _sp_tile2+5+1
	ldx     #$00
	lda     _posx2
	bpl     L0393
	dex
L0393:	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldx     #$00
	lda     _posy2
	bpl     L0394
	dex
L0394:	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset2
	bcc     L07CC
	inx
L07CC:	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     _posy2
	bpl     L0397
	dex
L0397:	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldx     #$00
	lda     _posz2
	bpl     L0398
	dex
L0398:	jsr     pushax
	lda     #$16
	jsr     tosmula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	lda     _altview
	jeq     L03E4
	lda     #<(_dot02)
	sta     _sp_tile2+5
	lda     #>(_dot02)
	sta     _sp_tile2+5+1
	ldx     #$00
	lda     _posy2
	bpl     L03A2
	dex
L03A2:	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     _posz2
	bpl     L03A5
	dex
L03A5:	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldx     #$00
	lda     _posx2
	bpl     L03A6
	dex
L03A6:	jsr     pushax
	lda     #$0F
	jsr     tosmula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	ldx     #$00
	lda     _posx2
	bpl     L03AC
	dex
L03AC:	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     _posz2
	bpl     L03AF
	dex
L03AF:	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _posy2
	bpl     L03B1
	ldx     #$FF
L03B1:	jsr     tossubax
	jsr     pushax
	lda     #$0F
	jsr     tosmula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	ldx     #$00
	lda     _posx2
	bpl     L03B7
	dex
L03B7:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _posy2
	bpl     L03B8
	dex
L03B8:	cpx     ptr1+1
	jne     L03C6
	cmp     ptr1
	jne     L03C6
	ldx     #$00
	lda     _posx2
	bpl     L03BB
	dex
L03BB:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _posz2
	bpl     L03BC
	dex
L03BC:	cpx     ptr1+1
	bne     L03B9
	cmp     ptr1
	bne     L03B9
	ldx     #$00
	lda     _posx2
	bpl     L03BF
	dex
L03BF:	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     _posx2
	bpl     L03C2
	dex
L03C2:	jsr     mulax3
	ldy     #$4A
	jsr     incaxy
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L03B9:	ldx     #$00
	lda     _posx2
	bpl     L03C8
	dex
L03C8:	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _posz2
	bpl     L03C9
	ldx     #$FF
L03C9:	jsr     tossubax
	jsr     tosicmp
	bne     L03C6
	ldx     #$00
	lda     _posx2
	bpl     L03CC
	dex
L03CC:	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     _posx2
	bpl     L03CF
	dex
L03CF:	jsr     mulax3
	ldy     #$59
	jsr     incaxy
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L03C6:	ldx     #$00
	lda     _posx2
	bpl     L03D5
	dex
L03D5:	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _posy2
	bpl     L03D6
	ldx     #$FF
L03D6:	jsr     tossubax
	jsr     tosicmp
	jne     L03E4
	ldx     #$00
	lda     _posx2
	bpl     L03D9
	dex
L03D9:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _posz2
	bpl     L03DA
	dex
L03DA:	cpx     ptr1+1
	bne     L03D7
	cmp     ptr1
	bne     L03D7
	ldx     #$00
	lda     _posx2
	bpl     L03DD
	dex
L03DD:	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	lda     #$62
	jsr     pusha0
	lda     _posx2
	bpl     L03E0
	ldx     #$FF
L03E0:	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L03D7:	ldx     #$00
	lda     _posx2
	bpl     L03E6
	dex
L03E6:	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _posz2
	bpl     L03E7
	ldx     #$FF
L03E7:	jsr     tossubax
	jsr     tosicmp
	bne     L03E4
	ldx     #$00
	lda     _posx2
	bpl     L03EA
	dex
L03EA:	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	lda     #$53
	jsr     pusha0
	lda     _posx2
	bpl     L03ED
	ldx     #$FF
L03ED:	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L03E4:	lda     #$04
	jsr     pusha0
	lda     #$07
	jsr     pusha0
	lda     #<(L03F4)
	ldx     #>(L03F4)
	jsr     pushax
	jsr     _textxy
	ldx     #$00
	lda     _moves2
	cmp     #$0A
	bcs     L07F4
	lda     #$02
	bra     L03FB
L07F4:	txa
L03FB:	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$10
	jsr     pusha0
	lda     #<(L03FE)
	ldx     #>(L03FE)
	jsr     pushax
	jsr     _textxy
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	lda     #<(L0402)
	ldx     #>(L0402)
	jsr     pushax
	lda     _moves2
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	ldx     #$00
	lda     _moves2
	cmp     #$0A
	bcs     L07F5
	lda     #$02
	bra     L040A
L07F5:	txa
L040A:	ldy     #$41
	jsr     incaxy
	jsr     pushax
	lda     #$10
	jsr     pusha0
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	jsr     _textxy
	lda     #$03
	jsr     pusha0
	lda     #$1A
	jsr     pusha0
	lda     #<(L0411)
	ldx     #>(L0411)
	jsr     pushax
	jsr     _textxy
	lda     #$03
	jsr     pusha0
	lda     #$22
	jsr     pusha0
	lda     #<(L0416)
	ldx     #>(L0416)
	jsr     pushax
	jsr     _textxy
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	lda     #<(L041A)
	ldx     #>(L041A)
	jsr     pushax
	ldy     #$0F
	lda     (sp),y
	jsr     pusha0
	lda     #$18
	jsr     tosudiva0
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	lda     #$29
	jsr     pusha0
	lda     #$1A
	jsr     pusha0
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	jsr     _textxy
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	lda     #<(L0423)
	ldx     #>(L0423)
	jsr     pushax
	ldy     #$0E
	ldx     #$00
	lda     (sp),y
	cmp     #$01
	bne     L07F7
	lda     _brd2+70
	bpl     L042B
L07F6:	cmp     #$80
	bcc     L042B
	bra     L07E3
L07F7:	lda     _brd2+69
	cmp     #$80
	bcc     L07F6
L07E3:	dex
L042B:	jsr     pushax
	lda     #$18
	jsr     tosdiva0
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	lda     #$21
	jsr     pusha0
	ina
	jsr     pusha0
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	jsr     _textxy
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L0439:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0439
	lda     #<(_gfx2_pal)
	ldx     #>(_gfx2_pal)
	jsr     _tgi_setpalette
	jsr     _getmove2
	ldx     #$00
	cmp     #$80
	bcc     L0441
	dex
L0441:	jsr     stax0sp
	ldy     #$0A
	lda     (sp),y
	cmp     #$01
	bne     L0442
	lda     _posx2
	jsr     pusha
	lda     _posy2
	jsr     pusha
	lda     _posz2
	jsr     pusha
	jsr     _coordtoint2
	sta     _brd2+72
	bra     L0449
L0442:	lda     _posx2
	jsr     pusha
	lda     _posy2
	jsr     pusha
	lda     _posz2
	jsr     pusha
	jsr     _coordtoint2
	sta     _brd2+71
L0449:	lda     _reset
	sta     _brd2+73
	lda     _musicEnabled
	beq     L0452
	lda     _tunenum
	bra     L07E4
L0452:	lda     #$03
L07E4:	sta     _oldmusic
	sta     _brd2+74
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     #$4B
	jsr     pusha
	jsr     _netSendData
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     #$4B
	jsr     pusha
	jsr     _netReceiveData
	lda     _oldmusic
	cmp     _brd2+74
	beq     L07F9
	lda     _brd2+74
	jsr     pusha
	jsr     _changeTune
L07F9:	lda     _brd2+73
	ora     _reset
	sta     _reset
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	ldy     #$0C
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	jsr     _legal2
	stx     tmp1
	ora     tmp1
	bne     L07FA
	lda     _brd2+73
	jeq     L07F0
L07FA:	lda     _brd2+73
	jne     L0492
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	ldy     #$0C
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	jsr     _gb2_place
	ldy     #$0A
	lda     (sp),y
	cmp     #$01
	bne     L0478
	lda     (sp)
	sta     _brd2+67
	bra     L047D
L0478:	lda     (sp)
	sta     _brd2+68
L047D:	lda     #<(_cs2)
	ldx     #>(_cs2)
	jsr     pushax
	ldy     #$0C
	lda     (sp),y
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     pusha
	jsr     _cs2_place
	stx     tmp1
	ora     tmp1
	beq     L0481
	ldy     #$0A
	lda     (sp),y
	sta     _brd2+1
L0481:	lda     #<(_SAMPLE0_FILENR)
	ldx     #>(_SAMPLE0_FILENR)
	jsr     pushax
	jsr     _play_PCM
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     #$4B
	jsr     pusha
	jsr     _netSendData
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     #$4B
	jsr     pusha
	jsr     _netReceiveData
	jmp     L0492
L034E:	lda     _altview
	beq     L07FB
	lda     #$00
	bra     L07E5
L07FB:	lda     #$1A
L07E5:	sta     _gridoffset2
	jsr     _drawBoard2
	lda     _lastmove
	jeq     L049E
	ldx     _brd2+68
	jmi     L049E
	lda     _brd2+68
	and     #$03
	ldy     #$09
	sta     (sp),y
	ldx     #$00
	lda     _brd2+68
	bpl     L04A9
	dex
L04A9:	jsr     asrax2
	and     #$03
	dey
	sta     (sp),y
	ldx     #$00
	lda     _brd2+68
	bpl     L04AD
	dex
L04AD:	jsr     asrax4
	and     #$03
	dey
	sta     (sp),y
	lda     #<(_cursor12)
	sta     _sp_tile2+5
	lda     #>(_cursor12)
	sta     _sp_tile2+5+1
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset2
	bcc     L07CD
	inx
L07CD:	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L049E:	lda     _lastmove
	jeq     L04B7
	ldx     _brd2+67
	jmi     L04B7
	lda     _brd2+67
	and     #$03
	ldy     #$09
	sta     (sp),y
	ldx     #$00
	lda     _brd2+67
	bpl     L04C2
	dex
L04C2:	jsr     asrax2
	and     #$03
	dey
	sta     (sp),y
	ldx     #$00
	lda     _brd2+67
	bpl     L04C6
	dex
L04C6:	jsr     asrax4
	and     #$03
	dey
	sta     (sp),y
	lda     #<(_cursor12)
	sta     _sp_tile2+5
	lda     #>(_cursor12)
	sta     _sp_tile2+5+1
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset2
	bcc     L07CE
	inx
L07CE:	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L04B7:	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	cmp     #$02
	jne     L0800
	lda     _brd2+72
	and     #$03
	dey
	sta     (sp),y
	lda     _brd2+72
	bpl     L04D8
	dex
L04D8:	jsr     asrax2
	and     #$03
	dey
	sta     (sp),y
	ldx     #$00
	lda     _brd2+72
	bpl     L04DC
	dex
L04DC:	jsr     asrax4
	and     #$03
	dey
	sta     (sp),y
	lda     #<(_cursor02)
	sta     _sp_tile2+5
	lda     #>(_cursor02)
	sta     _sp_tile2+5+1
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset2
	bcc     L07CF
	inx
L07CF:	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	ldy     #$0A
	ldx     #$00
L0800:	lda     (sp),y
	cmp     #$01
	jne     L0802
	lda     _brd2+71
	and     #$03
	dey
	sta     (sp),y
	lda     _brd2+71
	bpl     L04EE
	dex
L04EE:	jsr     asrax2
	and     #$03
	dey
	sta     (sp),y
	ldx     #$00
	lda     _brd2+71
	bpl     L04F2
	dex
L04F2:	jsr     asrax4
	and     #$03
	dey
	sta     (sp),y
	lda     #<(_cursor02)
	sta     _sp_tile2+5
	lda     #>(_cursor02)
	sta     _sp_tile2+5+1
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset2
	bcc     L07D0
	inx
L07D0:	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L0802:	lda     #$04
	jsr     pusha0
	lda     #$07
	jsr     pusha0
	lda     #<(L04FF)
	ldx     #>(L04FF)
	jsr     pushax
	jsr     _textxy
	ldx     #$00
	lda     _moves2
	cmp     #$0A
	bcs     L0803
	lda     #$02
	bra     L0506
L0803:	txa
L0506:	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$10
	jsr     pusha0
	lda     #<(L0509)
	ldx     #>(L0509)
	jsr     pushax
	jsr     _textxy
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	lda     #<(L050D)
	ldx     #>(L050D)
	jsr     pushax
	lda     _moves2
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	ldx     #$00
	lda     _moves2
	cmp     #$0A
	bcs     L0804
	lda     #$02
	bra     L0515
L0804:	txa
L0515:	ldy     #$41
	jsr     incaxy
	jsr     pushax
	lda     #$10
	jsr     pusha0
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	jsr     _textxy
	lda     #$03
	jsr     pusha0
	lda     #$1A
	jsr     pusha0
	lda     #<(L051C)
	ldx     #>(L051C)
	jsr     pushax
	jsr     _textxy
	lda     #$03
	jsr     pusha0
	lda     #$22
	jsr     pusha0
	lda     #<(L0521)
	ldx     #>(L0521)
	jsr     pushax
	jsr     _textxy
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	lda     #<(L0525)
	ldx     #>(L0525)
	jsr     pushax
	ldy     #$0F
	lda     (sp),y
	jsr     pusha0
	lda     #$18
	jsr     tosudiva0
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	lda     #$29
	jsr     pusha0
	lda     #$1A
	jsr     pusha0
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	jsr     _textxy
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	lda     #<(L052E)
	ldx     #>(L052E)
	jsr     pushax
	ldy     #$0E
	ldx     #$00
	lda     (sp),y
	cmp     #$01
	bne     L0806
	lda     _brd2+70
	bpl     L0536
L0805:	cmp     #$80
	bcc     L0536
	bra     L07E6
L0806:	lda     _brd2+69
	cmp     #$80
	bcc     L0805
L07E6:	dex
L0536:	jsr     pushax
	lda     #$18
	jsr     tosdiva0
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	lda     #$21
	jsr     pusha0
	ina
	jsr     pusha0
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	jsr     _textxy
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L0544:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0544
	lda     #<(_gfx2_pal)
	ldx     #>(_gfx2_pal)
	jsr     _tgi_setpalette
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     #$4B
	jsr     pusha
	jsr     _netReceiveData
	lda     _oldmusic
	cmp     _brd2+74
	beq     L054E
	lda     _brd2+74
	jsr     pusha
	jsr     _changeTune
L054E:	jsr     _checkInput
	lda     _musicEnabled
	beq     L0553
	lda     _tunenum
	bra     L07E7
L0553:	lda     #$03
L07E7:	sta     _oldmusic
	sta     _brd2+74
	lda     _brd2+73
	sta     ptr1
	lda     _reset
	ora     ptr1
	sta     _brd2+73
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     #$4B
	jsr     pusha
	jsr     _netSendData
	lda     _brd2+73
	sta     _reset
	ldy     #$0A
	lda     (sp),y
	cmp     _brd2
	bne     L07DB
	lda     _brd2+73
	jeq     L034E
L07DB:	lda     #<(_SAMPLE0_FILENR)
	ldx     #>(_SAMPLE0_FILENR)
	jsr     pushax
	jsr     _play_PCM
L0492:	lda     _moves2
	ina
	sta     _moves2
L0348:	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	jsr     _gb2_gameover
	stx     tmp1
	ora     tmp1
	bne     L034B
	lda     _brd2+73
	jeq     L0346
L034B:	ldx     #$00
	lda     #$10
	ldy     #$06
	jmp     L07E8
L056E:	jsr     _drawBoard2
	ldy     #$0A
	lda     (sp),y
	cmp     _brd2+1
	bne     L080A
	lda     #$07
	jsr     pusha0
	jsr     pusha0
	lda     #<(L057A)
	ldx     #>(L057A)
	bra     L081B
L080A:	lda     _brd2+1
	beq     L080B
	lda     #$05
	jsr     pusha0
	lda     #$07
	jsr     pusha0
	lda     #<(L0582)
	ldx     #>(L0582)
	bra     L081B
L080B:	lda     #$0D
	jsr     pusha0
	lda     #$07
	jsr     pusha0
	lda     #<(L0588)
	ldx     #>(L0588)
L081B:	jsr     pushax
	jsr     _textxy
	ldy     #$06
	lda     (sp),y
	pha
	ina
	sta     (sp),y
	pla
	and     #$10
	beq     L058A
	lda     #$03
	jsr     pusha0
	lda     #$5D
	jsr     pusha0
	lda     #<(L058F)
	ldx     #>(L058F)
	jsr     pushax
	jsr     _textxy
L058A:	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L0596:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0596
	jsr     _checkInput
	ldy     #$05
	sta     (sp),y
	ldx     #$00
	lda     _joy_masks+4
	and     (sp),y
	pha
	pla
	beq     L081C
	dey
	lda     (sp),y
	bne     L059C
	ina
	dey
	sta     (sp),y
L059C:	ldy     #$05
L081C:	lda     (sp),y
	bne     L0570
	dey
L07E8:	sta     (sp),y
L0570:	ldy     #$03
	lda     (sp),y
	bne     L080F
	lda     _reset
	jeq     L056E
L080F:	stz     _ingame
	lda     _reset
	bne     L07E0
	ldy     #$0B
	lda     (sp),y
	cmp     #$FF
	bne     L05AD
	txa
	bra     L05CD
L05AD:	dey
	lda     (sp),y
	cmp     #$01
	bne     L0814
	lda     _brd2+69
	bpl     L05BB
L0813:	cmp     #$80
	bcc     L05BB
	bra     L05BB
L0814:	lda     _brd2+70
	cmp     #$80
	bcc     L0813
L05BB:	jsr     pusha
	ldy     #$0B
	lda     (sp),y
	cmp     #$01
	bne     L0817
	lda     _brd2+70
	bpl     L05C5
L0816:	cmp     #$80
	bcc     L05C5
	bra     L05C5
L0817:	lda     _brd2+69
	cmp     #$80
	bcc     L0816
L05C5:	jsr     pusha
	ldy     #$0C
	lda     (sp),y
	cmp     _brd2+1
	bne     L0819
	lda     #$01
	bra     L05CA
L0819:	lda     #$02
L05CA:	jsr     pusha
	lda     _moves2
	jsr     pusha0
	jsr     _newRank2
	bra     L05CD
L07E0:	lda     #$FF
L05CD:	ldy     #$0C
	jmp     addysp

.endproc

; ---------------------------------------------------------------
; unsigned int __near__ game2P (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"GAME2P_CODE"

.proc	_game2P: near

.segment	"GAME2P_CODE"

	jsr     decsp4
	lda     #$01
	jsr     pusha
	jsr     pusha
	dea
	jsr     pusha
	ldx     #$FF
	txa
	jsr     pushax
	jsr     decsp2
	lda     #$01
	sta     _ingame
	jsr     _play_Tune
	lda     _musicEnabled
	beq     L05D7
	lda     _tunenum
	bra     L0826
L05D7:	lda     #$03
L0826:	sta     _oldmusic
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	jsr     _gb2_reset
	lda     #<(_cs2)
	ldx     #>(_cs2)
	jsr     pushax
	jsr     _cs2_init
	stz     _posx2
	stz     _posy2
	stz     _posz2
	lda     #$01
	sta     _moves2
	lda     #$FF
	sta     _brd2+68
	sta     _brd2+67
	stz     _brd2+71
	stz     _brd2+72
	jmp     L05F4
L082D:	lda     _flipflop
	sta     _oldflipflop2
	lda     _altview
	beq     L082E
	lda     #$00
	bra     L0827
L082E:	lda     #$1A
L0827:	sta     _gridoffset2
	jsr     _drawBoard2
	lda     _lastmove
	jeq     L0606
	ldx     _brd2+68
	jmi     L0606
	lda     _brd2+68
	and     #$03
	ldy     #$09
	sta     (sp),y
	ldx     #$00
	lda     _brd2+68
	bpl     L0611
	dex
L0611:	jsr     asrax2
	and     #$03
	dey
	sta     (sp),y
	ldx     #$00
	lda     _brd2+68
	bpl     L0615
	dex
L0615:	jsr     asrax4
	and     #$03
	dey
	sta     (sp),y
	lda     #<(_cursor12)
	sta     _sp_tile2+5
	lda     #>(_cursor12)
	sta     _sp_tile2+5+1
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset2
	bcc     L081D
	inx
L081D:	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L0606:	lda     _lastmove
	jeq     L061F
	ldx     _brd2+67
	jmi     L061F
	lda     _brd2+67
	and     #$03
	ldy     #$09
	sta     (sp),y
	ldx     #$00
	lda     _brd2+67
	bpl     L062A
	dex
L062A:	jsr     asrax2
	and     #$03
	dey
	sta     (sp),y
	ldx     #$00
	lda     _brd2+67
	bpl     L062E
	dex
L062E:	jsr     asrax4
	and     #$03
	dey
	sta     (sp),y
	lda     #<(_cursor12)
	sta     _sp_tile2+5
	lda     #>(_cursor12)
	sta     _sp_tile2+5+1
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset2
	bcc     L081E
	inx
L081E:	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L061F:	lda     #<(_cursor02)
	sta     _sp_tile2+5
	lda     #>(_cursor02)
	sta     _sp_tile2+5+1
	ldx     #$00
	lda     _posx2
	bpl     L063C
	dex
L063C:	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldx     #$00
	lda     _posy2
	bpl     L063D
	dex
L063D:	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset2
	bcc     L081F
	inx
L081F:	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     _posy2
	bpl     L0640
	dex
L0640:	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldx     #$00
	lda     _posz2
	bpl     L0641
	dex
L0641:	jsr     pushax
	lda     #$16
	jsr     tosmula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	lda     _altview
	jeq     L068D
	lda     #<(_dot02)
	sta     _sp_tile2+5
	lda     #>(_dot02)
	sta     _sp_tile2+5+1
	ldx     #$00
	lda     _posy2
	bpl     L064B
	dex
L064B:	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     _posz2
	bpl     L064E
	dex
L064E:	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldx     #$00
	lda     _posx2
	bpl     L064F
	dex
L064F:	jsr     pushax
	lda     #$0F
	jsr     tosmula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	ldx     #$00
	lda     _posx2
	bpl     L0655
	dex
L0655:	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     _posz2
	bpl     L0658
	dex
L0658:	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _posy2
	bpl     L065A
	ldx     #$FF
L065A:	jsr     tossubax
	jsr     pushax
	lda     #$0F
	jsr     tosmula0
	jsr     tosaddax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
	ldx     #$00
	lda     _posx2
	bpl     L0660
	dex
L0660:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _posy2
	bpl     L0661
	dex
L0661:	cpx     ptr1+1
	jne     L066F
	cmp     ptr1
	jne     L066F
	ldx     #$00
	lda     _posx2
	bpl     L0664
	dex
L0664:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _posz2
	bpl     L0665
	dex
L0665:	cpx     ptr1+1
	bne     L0662
	cmp     ptr1
	bne     L0662
	ldx     #$00
	lda     _posx2
	bpl     L0668
	dex
L0668:	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     _posx2
	bpl     L066B
	dex
L066B:	jsr     mulax3
	ldy     #$4A
	jsr     incaxy
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L0662:	ldx     #$00
	lda     _posx2
	bpl     L0671
	dex
L0671:	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _posz2
	bpl     L0672
	ldx     #$FF
L0672:	jsr     tossubax
	jsr     tosicmp
	bne     L066F
	ldx     #$00
	lda     _posx2
	bpl     L0675
	dex
L0675:	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	ldx     #$00
	lda     _posx2
	bpl     L0678
	dex
L0678:	jsr     mulax3
	ldy     #$59
	jsr     incaxy
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L066F:	ldx     #$00
	lda     _posx2
	bpl     L067E
	dex
L067E:	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _posy2
	bpl     L067F
	ldx     #$FF
L067F:	jsr     tossubax
	jsr     tosicmp
	jne     L068D
	ldx     #$00
	lda     _posx2
	bpl     L0682
	dex
L0682:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _posz2
	bpl     L0683
	dex
L0683:	cpx     ptr1+1
	bne     L0680
	cmp     ptr1
	bne     L0680
	ldx     #$00
	lda     _posx2
	bpl     L0686
	dex
L0686:	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	lda     #$62
	jsr     pusha0
	lda     _posx2
	bpl     L0689
	ldx     #$FF
L0689:	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L0680:	ldx     #$00
	lda     _posx2
	bpl     L068F
	dex
L068F:	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _posz2
	bpl     L0690
	ldx     #$FF
L0690:	jsr     tossubax
	jsr     tosicmp
	bne     L068D
	ldx     #$00
	lda     _posx2
	bpl     L0693
	dex
L0693:	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile2+7
	stx     _sp_tile2+7+1
	lda     #$53
	jsr     pusha0
	lda     _posx2
	bpl     L0696
	ldx     #$FF
L0696:	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile2+9
	stx     _sp_tile2+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile2)
	ldx     #>(_sp_tile2)
	jsr     _tgi_ioctl
L068D:	lda     _brd2
	cmp     #$02
	bne     L0831
	lda     #$08
	jsr     pusha0
	dea
	jsr     pusha0
	lda     #<(L069F)
	ldx     #>(L069F)
	bra     L0844
L0831:	lda     #$08
	jsr     pusha0
	dea
	jsr     pusha0
	lda     #<(L06A5)
	ldx     #>(L06A5)
L0844:	jsr     pushax
	jsr     _textxy
	ldx     #$00
	lda     _moves2
	cmp     #$0A
	bcs     L0832
	lda     #$02
	bra     L06AC
L0832:	txa
L06AC:	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$10
	jsr     pusha0
	lda     #<(L06AF)
	ldx     #>(L06AF)
	jsr     pushax
	jsr     _textxy
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	lda     #<(L06B3)
	ldx     #>(L06B3)
	jsr     pushax
	lda     _moves2
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	ldx     #$00
	lda     _moves2
	cmp     #$0A
	bcs     L0833
	lda     #$02
	bra     L06BB
L0833:	txa
L06BB:	ldy     #$41
	jsr     incaxy
	jsr     pushax
	lda     #$10
	jsr     pusha0
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	jsr     _textxy
	ldy     #$0C
	lda     (sp),y
	cmp     #$FF
	jcs     L0834
	lda     #$03
	jsr     pusha0
	lda     #$18
	jsr     pusha0
	lda     #<(L06C4)
	ldx     #>(L06C4)
	jsr     pushax
	jsr     _textxy
	lda     #$03
	jsr     pusha0
	lda     #$22
	jsr     pusha0
	lda     #<(L06C9)
	ldx     #>(L06C9)
	jsr     pushax
	jsr     _textxy
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	lda     #<(L06CD)
	ldx     #>(L06CD)
	jsr     pushax
	ldy     #$10
	lda     (sp),y
	jsr     pusha0
	lda     #$18
	jsr     tosudiva0
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	lda     #$20
	jsr     pusha0
	lda     #$18
	jsr     pusha0
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	jsr     _textxy
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	jsr     pushax
	lda     #<(L06D6)
	ldx     #>(L06D6)
	jsr     pushax
	ldy     #$0F
	lda     (sp),y
	jsr     pusha0
	lda     #$18
	jsr     tosudiva0
	jsr     pushax
	ldy     #$06
	jsr     _sprintf
	lda     #$20
	jsr     pusha0
	lda     #$22
	jsr     pusha0
	lda     #<(_gbuf2)
	ldx     #>(_gbuf2)
	bra     L0845
L0834:	lda     #$03
	jsr     pusha0
	lda     #$18
	jsr     pusha0
	lda     #<(L06E1)
	ldx     #>(L06E1)
L0845:	jsr     pushax
	jsr     _textxy
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L06E8:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L06E8
	lda     #<(_gfx2_pal)
	ldx     #>(_gfx2_pal)
	jsr     _tgi_setpalette
	jsr     _getmove2
	ldx     #$00
	cmp     #$80
	bcc     L06F0
	dex
L06F0:	ldy     #$02
	jsr     staxysp
	lda     _brd2
	cmp     #$02
	bne     L06F1
	lda     _posx2
	jsr     pusha
	lda     _posy2
	jsr     pusha
	lda     _posz2
	jsr     pusha
	jsr     _coordtoint2
	sta     _brd2+72
	bra     L06F8
L06F1:	lda     _posx2
	jsr     pusha
	lda     _posy2
	jsr     pusha
	lda     _posz2
	jsr     pusha
	jsr     _coordtoint2
	sta     _brd2+71
L06F8:	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     _brd2
	cmp     #$02
	bne     L0835
	dea
	bra     L0704
L0835:	lda     #$02
L0704:	jsr     pusha0
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	jsr     _legal2
	stx     tmp1
	ora     tmp1
	bne     L0823
	lda     _reset
	jeq     L082D
L0823:	lda     _reset
	jne     L05F4
	lda     _brd2
	cmp     #$02
	bne     L070B
	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     #$01
	jsr     pusha0
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	jsr     _gb2_place
	ldy     #$02
	lda     (sp),y
	sta     _brd2+67
	lda     #<(_cs2)
	ldx     #>(_cs2)
	jsr     pushax
	lda     #$01
	jsr     pusha0
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	jsr     _cs2_place
	stx     tmp1
	ora     tmp1
	beq     L0723
	lda     #$01
	bra     L082A
L070B:	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	lda     #$02
	jsr     pusha0
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	jsr     _gb2_place
	ldy     #$02
	lda     (sp),y
	sta     _brd2+68
	lda     #<(_cs2)
	ldx     #>(_cs2)
	jsr     pushax
	lda     #$02
	jsr     pusha0
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	jsr     _cs2_place
	stx     tmp1
	ora     tmp1
	beq     L0723
	lda     #$02
L082A:	sta     _brd2+1
L0723:	lda     _moves2
	ina
	sta     _moves2
	lda     #<(_SAMPLE0_FILENR)
	ldx     #>(_SAMPLE0_FILENR)
	jsr     pushax
	jsr     _play_PCM
L05F4:	lda     #<(_brd2)
	ldx     #>(_brd2)
	jsr     pushax
	jsr     _gb2_gameover
	stx     tmp1
	ora     tmp1
	bne     L0836
	lda     _reset
	jeq     L082D
L0836:	lda     #$10
	ldy     #$0A
	sta     (sp),y
	ldx     #$00
	lda     #$01
	jmp     L0846
L0731:	jsr     _drawBoard2
	lda     _brd2+1
	cmp     #$01
	bne     L0837
	lda     #$07
	jsr     pusha0
	jsr     pusha0
	lda     #<(L073D)
	ldx     #>(L073D)
	bra     L0847
L0837:	lda     _brd2+1
	beq     L0838
	lda     #$07
	jsr     pusha0
	jsr     pusha0
	lda     #<(L0745)
	ldx     #>(L0745)
	bra     L0847
L0838:	lda     #$0D
	jsr     pusha0
	lda     #$07
	jsr     pusha0
	lda     #<(L074B)
	ldx     #>(L074B)
L0847:	jsr     pushax
	jsr     _textxy
	ldy     #$0A
	lda     (sp),y
	pha
	ina
	sta     (sp),y
	pla
	and     #$10
	beq     L074D
	lda     #$03
	jsr     pusha0
	lda     #$5D
	jsr     pusha0
	lda     #<(L0752)
	ldx     #>(L0752)
	jsr     pushax
	jsr     _textxy
L074D:	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L0759:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0759
	jsr     _checkInput
	ldy     #$06
	sta     (sp),y
	ldx     #$00
	lda     _joy_masks+4
	and     (sp),y
	pha
	pla
	beq     L0848
	dey
	lda     (sp),y
	bne     L075F
	ina
	dey
	sta     (sp),y
L075F:	ldy     #$06
L0848:	lda     (sp),y
	bne     L0733
L0846:	ldy     #$05
	sta     (sp),y
L0733:	ldy     #$04
	lda     (sp),y
	bne     L083C
	lda     _reset
	jeq     L0731
L083C:	stz     _ingame
	lda     _reset
	bne     L0843
	ldy     #$0C
	lda     (sp),y
	cmp     #$FF
	bne     L0840
	txa
	bra     L078C
L0840:	lda     (sp),y
	jsr     pusha
	ldy     #$0C
	lda     (sp),y
	jsr     pusha
	lda     _brd2+1
	cmp     #$01
	beq     L077C
	lda     #$02
L077C:	jsr     pusha
	lda     _moves2
	jsr     pusha0
	jsr     _newRank2
	ldx     #$00
	jsr     stax0sp
	jsr     pusha0
	ldy     #$0D
	lda     (sp),y
	jsr     pusha
	ldy     #$0F
	lda     (sp),y
	jsr     pusha
	lda     _brd2+1
	cmp     #$01
	bne     L0842
	ina
	bra     L0788
L0842:	lda     #$01
L0788:	jsr     pusha
	lda     _moves2
	jsr     pusha0
	jsr     _newRank2
	tax
	lda     #$00
	jsr     tosorax
	jsr     stax0sp
	bra     L078C
L0843:	lda     #$FF
L078C:	ldy     #$0D
	jmp     addysp

.endproc

