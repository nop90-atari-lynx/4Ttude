;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_sprintf
	.import		_tgi_setpalette
	.import		_tgi_ioctl
	.import		_joy_masks
	.import		_gb_reset
	.import		_coordtoint
	.import		_legal
	.import		_gb_place
	.import		_gb_gameover
	.import		_cs_init
	.import		_cs_place
	.import		_set_difficulty
	.import		_makemove
	.export		_gfx_redir
	.export		_gfx_pal
	.import		_textxy
	.import		_checkInput
	.import		_play_Tune
	.import		_play_PCM
	.export		_brd
	.export		_cs
	.export		_s
	.export		_posx
	.export		_posy
	.export		_posz
	.export		_moves
	.export		_gbuf
	.export		_oldflipflop
	.export		_lastplayed
	.export		_gridoffset
	.import		_background
	.import		_grid0
	.import		_gridSmall
	.import		_cursor0
	.import		_cursor1
	.import		_tile1
	.import		_tile2
	.import		_dot0
	.import		_dot1
	.import		_dot2
	.import		_dleft
	.import		_dright
	.import		_reset
	.import		_altview
	.import		_lastmove
	.import		_ingame
	.import		_flipflop
	.import		_SAMPLE0_FILENR
	.import		_SAMPLE1_FILENR
	.import		_SAMPLE2_FILENR
	.export		_sp_bg
	.export		_sp_grid
	.export		_sp_gridsmall
	.export		_sp_tile
	.export		_trainoptions
	.export		_newRank
	.export		_getmove
	.export		_drawBoard
	.export		_game

.segment	"GAME_DATA"

_gfx_redir:
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_gfx_pal:
	.byte	$02
	.byte	$00
	.byte	$00
	.byte	$03
	.byte	$05
	.byte	$04
	.byte	$07
	.byte	$06
	.byte	$0B
	.byte	$0A
	.byte	$0B
	.byte	$0D
	.byte	$0E
	.byte	$0E
	.byte	$0F
	.byte	$0F
	.byte	$33
	.byte	$0C
	.byte	$0F
	.byte	$39
	.byte	$52
	.byte	$3E
	.byte	$53
	.byte	$39
	.byte	$42
	.byte	$36
	.byte	$4E
	.byte	$5C
	.byte	$1B
	.byte	$8F
	.byte	$FF
	.byte	$FF
_sp_bg:
	.byte	$C0
	.byte	$10
	.byte	$01
	.word	$0000
	.addr	_background
	.word	$0000
	.word	$0000
	.word	$0100
	.word	$0100
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_sp_grid:
	.byte	$C4
	.byte	$08
	.byte	$01
	.word	$0000
	.addr	_grid0
	.word	$0000
	.word	$0000
	.res	8,$00
_sp_gridsmall:
	.byte	$C4
	.byte	$08
	.byte	$01
	.word	$0000
	.addr	_gridSmall
	.word	$0000
	.word	$0000
	.res	8,$00
_sp_tile:
	.byte	$C4
	.byte	$08
	.byte	$01
	.word	$0000
	.addr	_cursor0
	.word	$0000
	.word	$0000
	.res	8,$00

.segment	"GAME_RODATA"

L00AA:
	.byte	$50,$72,$65,$73,$73,$20,$41,$20,$74,$6F,$20,$73,$65,$6C,$65,$63
	.byte	$74,$20,$61,$6E,$20,$6F,$70,$74,$69,$6F,$6E,$00
L0098:
	.byte	$55,$6E,$64,$6F,$20,$6C,$61,$73,$74,$20,$6D,$6F,$76,$65,$00
L0093:
	.byte	$47,$65,$74,$20,$61,$20,$68,$69,$6E,$74,$00
L041E:
	.byte	$53,$65,$61,$72,$63,$68,$69,$6E,$67,$00
L03DB:
	.byte	$59,$6F,$75,$72,$20,$74,$75,$72,$6E,$00
L04A1:
	.byte	$43,$50,$55,$20,$77,$69,$6E,$73,$00
L0445:
	.byte	$43,$50,$55,$20,$74,$75,$72,$6E,$00
L0089:
	.byte	$54,$72,$61,$69,$6E,$69,$6E,$67,$00
L04AE:
	.byte	$50,$72,$65,$73,$73,$20,$41,$00
L0499:
	.byte	$59,$6F,$75,$20,$77,$69,$6E,$00
L009D:
	.byte	$43,$61,$6E,$63,$65,$6C,$00
L044F	:=	L0098+10
L008E:
	.byte	$6D,$6F,$64,$65,$00
L04A7:
	.byte	$45,$76,$65,$6E,$00
L03E5	:=	L0098+10
L03E9:
	.byte	$25,$69,$00
L0453	:=	L03E9+0
L00A3:
	.byte	$3E,$00

.segment	"GAME_BSS"

_brd:
	.res	67,$00
_cs:
	.res	686,$00
_s:
	.res	68,$00
_posx:
	.res	1,$00
_posy:
	.res	1,$00
_posz:
	.res	1,$00
_moves:
	.res	1,$00
_gbuf:
	.res	3,$00
_oldflipflop:
	.res	1,$00
_lastplayed:
	.res	128,$00
_gridoffset:
	.res	1,$00

; ---------------------------------------------------------------
; signed char __near__ trainoptions (void)
; ---------------------------------------------------------------

.segment	"GAME_CODE"

.proc	_trainoptions: near

.segment	"GAME_CODE"

	lda     #$02
	jsr     pusha
	lda     #$00
	jsr     pusha
	ina
	jsr     pusha
	jsr     pusha
	lda     #$20
	jsr     pusha
	jmp     L007F
L007D:	jsr     pusha
	lda     #<(_sp_bg)
	ldx     #>(_sp_bg)
	jsr     _tgi_ioctl
	lda     #$03
	jsr     pusha0
	lda     #$07
	jsr     pusha0
	lda     #<(L0089)
	ldx     #>(L0089)
	jsr     pushax
	jsr     _textxy
	lda     #$2B
	jsr     pusha0
	lda     #$10
	jsr     pusha0
	lda     #<(L008E)
	ldx     #>(L008E)
	jsr     pushax
	jsr     _textxy
	lda     #$5F
	jsr     pusha0
	lda     #$19
	jsr     pusha0
	lda     #<(L0093)
	ldx     #>(L0093)
	jsr     pushax
	jsr     _textxy
	lda     #$5F
	jsr     pusha0
	lda     #$26
	jsr     pusha0
	lda     #<(L0098)
	ldx     #>(L0098)
	jsr     pushax
	jsr     _textxy
	lda     #$5F
	jsr     pusha0
	lda     #$33
	jsr     pusha0
	lda     #<(L009D)
	ldx     #>(L009D)
	jsr     pushax
	jsr     _textxy
	lda     #$55
	jsr     pusha0
	lda     #$33
	jsr     pusha0
	ldy     #$08
	lda     (sp),y
	jsr     pusha0
	lda     #$0D
	jsr     tosumula0
	jsr     tossubax
	jsr     pushax
	lda     #<(L00A3)
	ldx     #>(L00A3)
	jsr     pushax
	jsr     _textxy
	lda     (sp)
	pha
	ina
	sta     (sp)
	pla
	and     #$20
	beq     L00A5
	lda     #$05
	jsr     pusha0
	lda     #$5D
	jsr     pusha0
	lda     #<(L00AA)
	ldx     #>(L00AA)
	jsr     pushax
	jsr     _textxy
L00A5:	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L00B1:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L00B1
	lda     #<(_gfx_pal)
	ldx     #>(_gfx_pal)
	jsr     _tgi_setpalette
	jsr     _checkInput
	ldy     #$02
	sta     (sp),y
	lda     _joy_masks+4
	and     (sp),y
	pha
	pla
	beq     L00B9
	dey
	lda     (sp),y
	bne     L00B9
	ldy     #$04
	lda     (sp),y
	cmp     #$01
	bne     L04D8
	lda     _moves
	cmp     #$03
	bcc     L04D9
L04D8:	lda     #$00
	bra     L00C4
L04D9:	lda     #$01
L00C4:	jsr     bnega
	beq     L00C0
	lda     #$01
	dey
	sta     (sp),y
L00C0:	lda     #<(_SAMPLE2_FILENR)
	ldx     #>(_SAMPLE2_FILENR)
	jsr     pushax
	jsr     _play_PCM
	lda     #$01
	tay
	sta     (sp),y
L00B9:	ldx     #$00
	lda     _joy_masks
	ldy     #$02
	and     (sp),y
	pha
	pla
	beq     L04E0
	dey
	lda     (sp),y
	bne     L04E0
	ldy     #$04
	lda     (sp),y
	ina
	bne     L00D5
	inx
L00D5:	jsr     pushax
	lda     #$03
	jsr     tosumoda0
	ldy     #$04
	sta     (sp),y
	lda     #<(_SAMPLE2_FILENR)
	ldx     #>(_SAMPLE2_FILENR)
	jsr     pushax
	jsr     _play_PCM
	lda     #$01
	tay
	sta     (sp),y
	ldx     #$00
L04E0:	lda     _joy_masks+1
	ldy     #$02
	and     (sp),y
	pha
	pla
	beq     L04E1
	dey
	lda     (sp),y
	bne     L00DA
	ldy     #$04
	lda     (sp),y
	jsr     incax2
	jsr     pushax
	lda     #$03
	jsr     tosumoda0
	ldy     #$04
	sta     (sp),y
	lda     #<(_SAMPLE2_FILENR)
	ldx     #>(_SAMPLE2_FILENR)
	jsr     pushax
	jsr     _play_PCM
	lda     #$01
	tay
	sta     (sp),y
L00DA:	iny
L04E1:	lda     (sp),y
	bne     L007F
	dey
	sta     (sp),y
L007F:	ldy     #$03
	lda     (sp),y
	bne     L04D4
	lda     _reset
	jeq     L007D
L04D4:	iny
	ldx     #$00
	lda     (sp),y
	jsr     negax
	jsr     decax1
	jmp     incsp5

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ newRank (unsigned char, unsigned char, unsigned char, int)
; ---------------------------------------------------------------

.segment	"GAME_CODE"

.proc	_newRank: near

.segment	"GAME_CODE"

	jsr     decsp2
	ldy     #$04
	lda     (sp),y
	cmp     #$01
	jne     L00EF
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	dey
	cmp     (sp),y
	jcs     L00F1
	lda     (sp),y
	sec
	iny
	sbc     (sp),y
	cmp     #$15
	bcc     L00F3
	ldy     #$03
	jsr     ldaxysp
	cmp     #$15
	txa
	sbc     #$00
	bvc     L00F8
	eor     #$80
L00F8:	bpl     L00F6
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$1E
	jsr     incaxy
	jmp     L04E6
L00F6:	ldy     #$03
	jsr     ldaxysp
	cmp     #$29
	txa
	sbc     #$00
	bvc     L00FF
	eor     #$80
L00FF:	bpl     L00FD
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$14
	jsr     incaxy
	jmp     L04E6
L00FD:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$0A
	jsr     incaxy
	jmp     L04E6
L00F3:	dey
	lda     (sp),y
	sec
	iny
	sbc     (sp),y
	cmp     #$0B
	bcc     L0108
	ldy     #$03
	jsr     ldaxysp
	cmp     #$15
	txa
	sbc     #$00
	bvc     L010D
	eor     #$80
L010D:	bpl     L010B
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$14
	jsr     incaxy
	jmp     L04E6
L010B:	ldy     #$03
	jsr     ldaxysp
	cmp     #$29
	txa
	sbc     #$00
	bvc     L0114
	eor     #$80
L0114:	bpl     L0112
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$0A
	jsr     incaxy
	jmp     L04E6
L0112:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     incax5
	jmp     L04E6
L0108:	ldy     #$03
	jsr     ldaxysp
	cmp     #$15
	txa
	sbc     #$00
	bvc     L011F
	eor     #$80
L011F:	bpl     L011D
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$0F
	jsr     incaxy
	jmp     L04E6
L011D:	ldy     #$03
	jsr     ldaxysp
	cmp     #$29
	txa
	sbc     #$00
	bvc     L0126
	eor     #$80
L0126:	bpl     L0124
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     incax6
	jmp     L04E6
L0124:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     incax3
	jmp     L04E6
L00F1:	iny
	lda     (sp),y
	sec
	dey
	sbc     (sp),y
	cmp     #$0A
	jcs     L0178
	iny
	lda     (sp),y
	ina
	jne     L04E6
	inx
	jmp     L04E6
L00EF:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	sec
	dey
	sbc     (sp),y
	jcc     L013A
	jeq     L013A
	iny
	lda     (sp),y
	sec
	dey
	sbc     (sp),y
	cmp     #$15
	bcc     L013C
	ldy     #$03
	jsr     ldaxysp
	cmp     #$15
	txa
	sbc     #$00
	bvc     L0141
	eor     #$80
L0141:	bpl     L013F
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$0F
	jsr     decaxy
	jmp     L04E6
L013F:	ldy     #$03
	jsr     ldaxysp
	cmp     #$29
	txa
	sbc     #$00
	bvc     L0148
	eor     #$80
L0148:	bpl     L0146
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$0A
	jsr     decaxy
	jmp     L04E6
L0146:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     decax5
	jmp     L04E6
L013C:	iny
	lda     (sp),y
	sec
	dey
	sbc     (sp),y
	cmp     #$0B
	bcc     L0151
	ldy     #$03
	jsr     ldaxysp
	cmp     #$15
	txa
	sbc     #$00
	bvc     L0156
	eor     #$80
L0156:	bpl     L0154
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	ldy     #$0A
	jsr     decaxy
	bra     L04E6
L0154:	ldy     #$03
	jsr     ldaxysp
	cmp     #$29
	txa
	sbc     #$00
	bvc     L015D
	eor     #$80
L015D:	bpl     L015B
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     decax7
	bra     L04E6
L015B:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     decax3
	bra     L04E6
L0151:	ldy     #$03
	jsr     ldaxysp
	cmp     #$15
	txa
	sbc     #$00
	bvc     L0168
	eor     #$80
L0168:	bpl     L0166
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     decax7
	bra     L04E6
L0166:	ldy     #$03
	jsr     ldaxysp
	cmp     #$29
	txa
	sbc     #$00
	bvc     L016F
	eor     #$80
L016F:	bpl     L016D
	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     decax4
	bra     L04E6
L016D:	ldy     #$06
	ldx     #$00
	lda     (sp),y
	jsr     decax2
	bra     L04E6
L013A:	iny
	lda     (sp),y
	sec
	dey
	sbc     (sp),y
	cmp     #$0A
	bcs     L0178
	iny
	lda     (sp),y
	jsr     decax1
	bra     L04E6
L0178:	iny
	lda     (sp),y
L04E6:	jsr     stax0sp
	cmp     #$FF
	txa
	sbc     #$00
	bvs     L0183
	eor     #$80
L0183:	bpl     L0181
	ldx     #$00
	lda     #$FE
	jsr     stax0sp
L0181:	jsr     ldax0sp
	cpx     #$80
	bcc     L0186
	ldx     #$00
	txa
	jsr     stax0sp
L0186:	ldx     #$00
	lda     (sp)
	jmp     incsp7

.endproc

; ---------------------------------------------------------------
; signed char __near__ getmove (unsigned char)
; ---------------------------------------------------------------

.segment	"GAME_CODE"

.proc	_getmove: near

.segment	"GAME_CODE"

	lda     #$01
	jsr     pusha
	bra     L018F
L018D:	jsr     _checkInput
	sta     (sp)
L018F:	lda     (sp)
	beq     L04F0
	lda     _reset
	beq     L018D
	bra     L04F0
L0195:	jsr     _checkInput
	sta     (sp)
L04F0:	lda     (sp)
	bne     L04F8
	lda     _reset
	bne     L04F8
	lda     _flipflop
	jsr     pusha0
	lda     _oldflipflop
	jsr     tosicmp0
	beq     L0195
L04F8:	lda     (sp)
	jsr     pusha0
	lda     _joy_masks+4
	jsr     tosanda0
	cmp     #$00
	beq     L019D
	lda     _posx
	jsr     pusha
	lda     _posy
	jsr     pusha
	lda     _posz
	jsr     pusha
	jsr     _coordtoint
	jmp     incsp2
L019D:	lda     (sp)
	jsr     pusha0
	lda     _joy_masks+5
	jsr     tosanda0
	cmp     #$00
	beq     L01A6
	ldy     #$01
	lda     (sp),y
	cmp     #$FF
	bne     L01A6
	jsr     _trainoptions
	jmp     incsp2
L01A6:	lda     (sp)
	jsr     pusha0
	lda     _joy_masks+3
	jsr     tosanda0
	cmp     #$00
	beq     L01AE
	lda     _posx
	ina
	sta     _posx
	cmp     #$04
	jne     L01F8
	stz     _posx
	lda     _posz
	bpl     L01BD
	ldx     #$FF
L01BD:	ina
	bne     L01BE
	inx
L01BE:	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmoda0
	sta     _posz
	lda     #<(_SAMPLE1_FILENR)
	ldx     #>(_SAMPLE1_FILENR)
	jmp     L04F7
L01AE:	lda     (sp)
	jsr     pusha0
	lda     _joy_masks+2
	jsr     tosanda0
	cmp     #$00
	beq     L01C5
	lda     _posx
	dea
	sta     _posx
	cmp     #$FF
	jne     L01F8
	lda     #$03
	sta     _posx
	lda     _posz
	bpl     L01D4
	ldx     #$FF
L01D4:	jsr     incax3
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmoda0
	sta     _posz
	lda     #<(_SAMPLE1_FILENR)
	ldx     #>(_SAMPLE1_FILENR)
	bra     L04F7
L01C5:	lda     (sp)
	jsr     pusha0
	lda     _joy_masks
	jsr     tosanda0
	cmp     #$00
	beq     L01DB
	lda     _posy
	dea
	sta     _posy
	cmp     #$FF
	bne     L01F8
	lda     #$03
	sta     _posy
	lda     _posz
	bpl     L01EA
	ldx     #$FF
L01EA:	jsr     incax3
	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmoda0
	sta     _posz
	lda     #<(_SAMPLE1_FILENR)
	ldx     #>(_SAMPLE1_FILENR)
	bra     L04F7
L01DB:	lda     (sp)
	jsr     pusha0
	lda     _joy_masks+1
	jsr     tosanda0
	cmp     #$00
	beq     L01F1
	lda     _posy
	ina
	sta     _posy
	cmp     #$04
	bne     L01F8
	stz     _posy
	lda     _posz
	bpl     L0200
	ldx     #$FF
L0200:	ina
	bne     L0201
	inx
L0201:	jsr     pushax
	ldx     #$00
	lda     #$04
	jsr     tosmoda0
	sta     _posz
	lda     #<(_SAMPLE1_FILENR)
	ldx     #>(_SAMPLE1_FILENR)
	bra     L04F7
L01F8:	lda     #<(_SAMPLE2_FILENR)
	ldx     #>(_SAMPLE2_FILENR)
L04F7:	jsr     pushax
	jsr     _play_PCM
L01F1:	ldx     #$FF
	txa
	jmp     incsp2

.endproc

; ---------------------------------------------------------------
; void __near__ drawBoard (void)
; ---------------------------------------------------------------

.segment	"GAME_CODE"

.proc	_drawBoard: near

.segment	"GAME_CODE"

	jsr     decsp4
	lda     #$00
	jsr     pusha
	lda     #<(_sp_bg)
	ldx     #>(_sp_bg)
	jsr     _tgi_ioctl
	ldx     #$00
	lda     _gridoffset
	ldy     #$49
	jsr     incaxy
	sta     _sp_grid+7
	stx     _sp_grid+7+1
	lda     #$0D
	sta     _sp_grid+9
	stz     _sp_grid+9+1
	lda     #$00
	ldy     #$03
L050F:	sta     (sp),y
	cmp     #$04
	bcs     L0212
	lda     #$00
	jsr     pusha
	lda     #<(_sp_grid)
	ldx     #>(_sp_grid)
	jsr     _tgi_ioctl
	lda     #$16
	clc
	adc     _sp_grid+9
	sta     _sp_grid+9
	bcc     L021E
	inc     _sp_grid+9+1
L021E:	ldy     #$03
	lda     (sp),y
	ina
	bra     L050F
L0212:	lda     _altview
	jeq     L0512
	lda     #$83
	sta     _sp_gridsmall+7
	stz     _sp_gridsmall+7+1
	lda     #$0D
	sta     _sp_gridsmall+9
	stz     _sp_gridsmall+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall)
	ldx     #>(_sp_gridsmall)
	jsr     _tgi_ioctl
	lda     #$1C
	sta     _sp_gridsmall+9
	stz     _sp_gridsmall+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall)
	ldx     #>(_sp_gridsmall)
	jsr     _tgi_ioctl
	lda     #$2B
	sta     _sp_gridsmall+9
	stz     _sp_gridsmall+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall)
	ldx     #>(_sp_gridsmall)
	jsr     _tgi_ioctl
	lda     #$3A
	sta     _sp_gridsmall+9
	stz     _sp_gridsmall+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall)
	ldx     #>(_sp_gridsmall)
	jsr     _tgi_ioctl
	lda     #$92
	sta     _sp_gridsmall+7
	stz     _sp_gridsmall+7+1
	lda     #$0D
	sta     _sp_gridsmall+9
	stz     _sp_gridsmall+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall)
	ldx     #>(_sp_gridsmall)
	jsr     _tgi_ioctl
	lda     #$1C
	sta     _sp_gridsmall+9
	stz     _sp_gridsmall+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall)
	ldx     #>(_sp_gridsmall)
	jsr     _tgi_ioctl
	lda     #$2B
	sta     _sp_gridsmall+9
	stz     _sp_gridsmall+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall)
	ldx     #>(_sp_gridsmall)
	jsr     _tgi_ioctl
	lda     #$3A
	sta     _sp_gridsmall+9
	stz     _sp_gridsmall+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gridsmall)
	ldx     #>(_sp_gridsmall)
	jsr     _tgi_ioctl
	lda     #<(_dleft)
	sta     _sp_tile+5
	lda     #>(_dleft)
	sta     _sp_tile+5+1
	lda     #$83
	sta     _sp_tile+7
	stz     _sp_tile+7+1
	lda     #$49
	sta     _sp_tile+9
	stz     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	lda     #$92
	sta     _sp_tile+7
	stz     _sp_tile+7+1
	lda     #$58
	sta     _sp_tile+9
	stz     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	lda     #<(_dright)
	sta     _sp_tile+5
	lda     #>(_dright)
	sta     _sp_tile+5+1
	lda     #$83
	sta     _sp_tile+7
	stz     _sp_tile+7+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	lda     #$92
	sta     _sp_tile+7
	stz     _sp_tile+7+1
	lda     #$49
	sta     _sp_tile+9
	stz     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	lda     #$00
L0512:	sta     (sp)
	cmp     #$04
	bcc     L0513
	jmp     incsp4
L0513:	lda     #$00
	ldy     #$01
L0511:	sta     (sp),y
	cmp     #$04
	jcs     L026D
	lda     #$00
	iny
L0510:	sta     (sp),y
	cmp     #$04
	jcs     L0275
	ldx     #$00
	lda     (sp)
	jsr     shlax4
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	dey
	lda     (sp),y
	jsr     shlax2
	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	iny
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L04FD
	inx
L04FD:	sta     ptr1
	txa
	clc
	adc     #>(_brd+3)
	sta     ptr1+1
	ldy     #<(_brd+3)
	lda     (ptr1),y
	cmp     #$01
	jne     L02C1
	lda     #<(_tile1)
	sta     _sp_tile+5
	lda     #>(_tile1)
	sta     _sp_tile+5+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$03
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset
	bcc     L04FB
	inx
L04FB:	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	lda     _altview
	jeq     L02C1
	lda     #<(_dot1)
	sta     _sp_tile+5
	lda     #>(_dot1)
	sta     _sp_tile+5+1
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldx     #$00
	lda     (sp)
	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	lda     #$0F
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldx     #$00
	lda     (sp)
	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	lda     #$03
	sec
	tay
	sbc     (sp),y
	jsr     pusha0
	lda     #$0F
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	dey
	cmp     (sp),y
	jne     L02AD
	iny
	lda     (sp),y
	cmp     (sp)
	bne     L02A4
	ldy     #$02
	lda     (sp),y
	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$4A
	jsr     incaxy
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L02A4:	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$03
	sec
	ldy     #$02
	sbc     (sp),y
	jsr     tosicmp0
	bne     L02AD
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$59
	jsr     incaxy
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L02AD:	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$03
	sec
	tay
	sbc     (sp),y
	jsr     tosicmp0
	jne     L02C1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	cmp     (sp)
	bne     L02B8
	ldy     #$02
	lda     (sp),y
	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	lda     #$62
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L02B8:	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$03
	sec
	ldy     #$02
	sbc     (sp),y
	jsr     tosicmp0
	bne     L02C1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	lda     #$53
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L02C1:	ldx     #$00
	lda     (sp)
	jsr     shlax4
	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	ldy     #$01
	lda     (sp),y
	jsr     shlax2
	clc
	adc     ptr1
	sta     ptr1
	txa
	adc     ptr1+1
	sta     ptr1+1
	iny
	lda     (sp),y
	clc
	adc     ptr1
	ldx     ptr1+1
	bcc     L0501
	inx
L0501:	sta     ptr1
	txa
	clc
	adc     #>(_brd+3)
	sta     ptr1+1
	ldy     #<(_brd+3)
	lda     (ptr1),y
	cmp     #$02
	jne     L027D
	lda     #<(_tile2)
	sta     _sp_tile+5
	lda     #>(_tile2)
	sta     _sp_tile+5+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$03
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset
	bcc     L04FC
	inx
L04FC:	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	lda     _altview
	jeq     L027D
	lda     #<(_dot2)
	sta     _sp_tile+5
	lda     #>(_dot2)
	sta     _sp_tile+5+1
	ldy     #$01
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldx     #$00
	lda     (sp)
	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$04
	lda     (sp),y
	jsr     pusha0
	lda     #$0F
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldx     #$00
	lda     (sp)
	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	lda     #$03
	sec
	tay
	sbc     (sp),y
	jsr     pusha0
	lda     #$0F
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	dey
	cmp     (sp),y
	jne     L02F4
	iny
	lda     (sp),y
	cmp     (sp)
	bne     L02EB
	ldy     #$02
	lda     (sp),y
	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$4A
	jsr     incaxy
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L02EB:	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$03
	sec
	ldy     #$02
	sbc     (sp),y
	jsr     tosicmp0
	bne     L02F4
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$59
	jsr     incaxy
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L02F4:	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$03
	sec
	tay
	sbc     (sp),y
	jsr     tosicmp0
	jne     L027D
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	cmp     (sp)
	bne     L02FF
	ldy     #$02
	lda     (sp),y
	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	lda     #$62
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L02FF:	ldy     #$02
	lda     (sp),y
	jsr     pusha0
	lda     #$03
	sec
	ldy     #$02
	sbc     (sp),y
	jsr     tosicmp0
	bne     L027D
	ldy     #$02
	ldx     #$00
	lda     (sp),y
	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	lda     #$53
	jsr     pusha0
	ldy     #$04
	lda     (sp),y
	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L027D:	ldy     #$02
	lda     (sp),y
	ina
	jmp     L0510
L0275:	dey
	lda     (sp),y
	ina
	jmp     L0511
L026D:	lda     (sp)
	ina
	jmp     L0512

.endproc

; ---------------------------------------------------------------
; unsigned char __near__ game (unsigned char, unsigned char)
; ---------------------------------------------------------------

.segment	"GAME_CODE"

.proc	_game: near

.segment	"GAME_CODE"

	jsr     decsp4
	lda     #$01
	jsr     pusha
	jsr     pusha
	dea
	jsr     pusha
	ldx     #$FF
	txa
	jsr     pushax
	jsr     decsp2
	lda     #$00
	ldy     #$0A
L0536:	sta     (sp),y
	cmp     #$40
	bcs     L0317
	ldx     #$00
	lda     (sp),y
	asl     a
	bcc     L0521
	inx
	clc
L0521:	adc     #<(_lastplayed)
	sta     ptr1
	txa
	adc     #>(_lastplayed)
	sta     ptr1+1
	lda     #$FF
	sta     (ptr1)
	ldy     #$01
	sta     (ptr1),y
	ldy     #$0A
	lda     (sp),y
	ina
	bra     L0536
L0317:	lda     #<(_brd)
	ldx     #>(_brd)
	jsr     pushax
	jsr     _gb_reset
	lda     #<(_s)
	ldx     #>(_s)
	jsr     pushax
	ldy     #$0E
	lda     (sp),y
	jsr     pusha0
	jsr     _set_difficulty
	lda     #<(_cs)
	ldx     #>(_cs)
	jsr     pushax
	jsr     _cs_init
	lda     #$01
	sta     _ingame
	jsr     _play_Tune
	stz     _posx
	stz     _posy
	stz     _posz
	lda     #$01
	sta     _moves
	jmp     L0335
L0333:	ldx     #$FF
	txa
	jsr     stax0sp
	lda     _brd
	cmp     #$01
	jne     L033F
L0524:	lda     _flipflop
	sta     _oldflipflop
	lda     _altview
	beq     L0525
	lda     #$00
	bra     L051D
L0525:	lda     #$1A
L051D:	sta     _gridoffset
	jsr     _drawBoard
	jsr     ldax0sp
	txa
	jmi     L034B
	lda     (sp)
	and     #$03
	ldy     #$09
	sta     (sp),y
	jsr     ldax0sp
	jsr     asrax2
	and     #$03
	ldy     #$08
	sta     (sp),y
	jsr     ldax0sp
	jsr     asrax4
	and     #$03
	ldy     #$07
	sta     (sp),y
	lda     #<(_cursor1)
	sta     _sp_tile+5
	lda     #>(_cursor1)
	sta     _sp_tile+5+1
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset
	bcc     L0514
	inx
L0514:	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L034B:	lda     _lastmove
	jeq     L035E
	lda     _moves
	cmp     #$02
	jcc     L035E
	ldx     #$00
	lda     _moves
	jsr     decax2
	jsr     aslax1
	clc
	adc     #<(_lastplayed)
	tay
	txa
	adc     #>(_lastplayed)
	tax
	tya
	jsr     ldaxi
	and     #$03
	ldy     #$09
	sta     (sp),y
	ldx     #$00
	lda     _moves
	jsr     decax2
	jsr     aslax1
	clc
	adc     #<(_lastplayed)
	tay
	txa
	adc     #>(_lastplayed)
	tax
	tya
	jsr     ldaxi
	jsr     asrax2
	and     #$03
	ldy     #$08
	sta     (sp),y
	ldx     #$00
	lda     _moves
	jsr     decax2
	jsr     aslax1
	clc
	adc     #<(_lastplayed)
	tay
	txa
	adc     #>(_lastplayed)
	tax
	tya
	jsr     ldaxi
	jsr     asrax4
	and     #$03
	ldy     #$07
	sta     (sp),y
	lda     #<(_cursor1)
	sta     _sp_tile+5
	lda     #>(_cursor1)
	sta     _sp_tile+5+1
	ldy     #$09
	ldx     #$00
	lda     (sp),y
	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldy     #$0A
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset
	bcc     L0515
	inx
L0515:	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldy     #$08
	ldx     #$00
	lda     (sp),y
	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldy     #$09
	lda     (sp),y
	jsr     pusha0
	lda     #$16
	jsr     tosumula0
	jsr     tosaddax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L035E:	lda     #<(_cursor0)
	sta     _sp_tile+5
	lda     #>(_cursor0)
	sta     _sp_tile+5+1
	ldx     #$00
	lda     _posx
	bpl     L037A
	dex
L037A:	jsr     mulax9
	ldy     #$4B
	jsr     incaxy
	jsr     pushax
	ldx     #$00
	lda     _posy
	bpl     L037B
	dex
L037B:	jsr     mulax5
	jsr     tosaddax
	clc
	adc     _gridoffset
	bcc     L0516
	inx
L0516:	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldx     #$00
	lda     _posy
	bpl     L037E
	dex
L037E:	jsr     mulax5
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldx     #$00
	lda     _posz
	bpl     L037F
	dex
L037F:	jsr     pushax
	lda     #$16
	jsr     tosmula0
	jsr     tosaddax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	lda     _altview
	jeq     L03CB
	lda     #<(_dot0)
	sta     _sp_tile+5
	lda     #>(_dot0)
	sta     _sp_tile+5+1
	ldx     #$00
	lda     _posy
	bpl     L0389
	dex
L0389:	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldx     #$00
	lda     _posz
	bpl     L038C
	dex
L038C:	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	ldx     #$00
	lda     _posx
	bpl     L038D
	dex
L038D:	jsr     pushax
	lda     #$0F
	jsr     tosmula0
	jsr     tosaddax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	ldx     #$00
	lda     _posx
	bpl     L0393
	dex
L0393:	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldx     #$00
	lda     _posz
	bpl     L0396
	dex
L0396:	jsr     mulax3
	ldy     #$0E
	jsr     incaxy
	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _posy
	bpl     L0398
	ldx     #$FF
L0398:	jsr     tossubax
	jsr     pushax
	lda     #$0F
	jsr     tosmula0
	jsr     tosaddax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
	ldx     #$00
	lda     _posx
	bpl     L039E
	dex
L039E:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _posy
	bpl     L039F
	dex
L039F:	cpx     ptr1+1
	jne     L03AD
	cmp     ptr1
	jne     L03AD
	ldx     #$00
	lda     _posx
	bpl     L03A2
	dex
L03A2:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _posz
	bpl     L03A3
	dex
L03A3:	cpx     ptr1+1
	bne     L03A0
	cmp     ptr1
	bne     L03A0
	ldx     #$00
	lda     _posx
	bpl     L03A6
	dex
L03A6:	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldx     #$00
	lda     _posx
	bpl     L03A9
	dex
L03A9:	jsr     mulax3
	ldy     #$4A
	jsr     incaxy
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L03A0:	ldx     #$00
	lda     _posx
	bpl     L03AF
	dex
L03AF:	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _posz
	bpl     L03B0
	ldx     #$FF
L03B0:	jsr     tossubax
	jsr     tosicmp
	bne     L03AD
	ldx     #$00
	lda     _posx
	bpl     L03B3
	dex
L03B3:	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	ldx     #$00
	lda     _posx
	bpl     L03B6
	dex
L03B6:	jsr     mulax3
	ldy     #$59
	jsr     incaxy
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L03AD:	ldx     #$00
	lda     _posx
	bpl     L03BC
	dex
L03BC:	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _posy
	bpl     L03BD
	ldx     #$FF
L03BD:	jsr     tossubax
	jsr     tosicmp
	jne     L03CB
	ldx     #$00
	lda     _posx
	bpl     L03C0
	dex
L03C0:	sta     ptr1
	stx     ptr1+1
	ldx     #$00
	lda     _posz
	bpl     L03C1
	dex
L03C1:	cpx     ptr1+1
	bne     L03BE
	cmp     ptr1
	bne     L03BE
	ldx     #$00
	lda     _posx
	bpl     L03C4
	dex
L03C4:	jsr     mulax3
	ldy     #$84
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	lda     #$62
	jsr     pusha0
	lda     _posx
	bpl     L03C7
	ldx     #$FF
L03C7:	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L03BE:	ldx     #$00
	lda     _posx
	bpl     L03CD
	dex
L03CD:	jsr     pushax
	lda     #$03
	jsr     pusha0
	lda     _posz
	bpl     L03CE
	ldx     #$FF
L03CE:	jsr     tossubax
	jsr     tosicmp
	bne     L03CB
	ldx     #$00
	lda     _posx
	bpl     L03D1
	dex
L03D1:	jsr     mulax3
	ldy     #$93
	jsr     incaxy
	sta     _sp_tile+7
	stx     _sp_tile+7+1
	lda     #$53
	jsr     pusha0
	lda     _posx
	bpl     L03D4
	ldx     #$FF
L03D4:	jsr     mulax3
	jsr     tossubax
	sta     _sp_tile+9
	stx     _sp_tile+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_tile)
	ldx     #>(_sp_tile)
	jsr     _tgi_ioctl
L03CB:	lda     #$04
	jsr     pusha0
	lda     #$07
	jsr     pusha0
	lda     #<(L03DB)
	ldx     #>(L03DB)
	jsr     pushax
	jsr     _textxy
	ldx     #$00
	lda     _moves
	cmp     #$0A
	bcs     L0527
	lda     #$02
	bra     L03E2
L0527:	txa
L03E2:	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$10
	jsr     pusha0
	lda     #<(L03E5)
	ldx     #>(L03E5)
	jsr     pushax
	jsr     _textxy
	lda     #<(_gbuf)
	ldx     #>(_gbuf)
	jsr     pushax
	lda     #<(L03E9)
	ldx     #>(L03E9)
	jsr     pushax
	lda     _moves
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	ldx     #$00
	lda     _moves
	cmp     #$0A
	bcs     L0528
	lda     #$02
	bra     L03F1
L0528:	txa
L03F1:	ldy     #$41
	jsr     incaxy
	jsr     pushax
	lda     #$10
	jsr     pusha0
	lda     #<(_gbuf)
	ldx     #>(_gbuf)
	jsr     pushax
	jsr     _textxy
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L03FA:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L03FA
	lda     #<(_gfx_pal)
	ldx     #>(_gfx_pal)
	jsr     _tgi_setpalette
	ldy     #$0B
	lda     (sp),y
	jsr     pusha
	jsr     _getmove
	ldx     #$00
	cmp     #$80
	bcc     L0403
	dex
L0403:	ldy     #$02
	jsr     staxysp
	cpx     #$FF
	jne     L0404
	cmp     #$FE
	jne     L0404
	inx
	lda     _moves
	jsr     decax2
	jsr     aslax1
	clc
	adc     #<(_lastplayed)
	tay
	txa
	adc     #>(_lastplayed)
	tax
	tya
	jsr     ldaxi
	clc
	adc     #<(_brd+3)
	sta     ptr1
	txa
	adc     #>(_brd+3)
	sta     ptr1+1
	lda     #$00
	sta     (ptr1)
	tax
	lda     _moves
	jsr     decax3
	jsr     aslax1
	clc
	adc     #<(_lastplayed)
	tay
	txa
	adc     #>(_lastplayed)
	tax
	tya
	jsr     ldaxi
	clc
	adc     #<(_brd+3)
	sta     ptr1
	txa
	adc     #>(_brd+3)
	sta     ptr1+1
	lda     #$00
	sta     (ptr1)
	tax
	lda     _moves
	jsr     decax2
	jsr     aslax1
	clc
	adc     #<(_lastplayed)
	sta     ptr1
	txa
	adc     #>(_lastplayed)
	sta     ptr1+1
	lda     #$FF
	sta     (ptr1)
	ldy     #$01
	sta     (ptr1),y
	ldx     #$00
	lda     _moves
	jsr     decax3
	jsr     aslax1
	clc
	adc     #<(_lastplayed)
	sta     ptr1
	txa
	adc     #>(_lastplayed)
	sta     ptr1+1
	lda     #$FF
	sta     (ptr1)
	ldy     #$01
	sta     (ptr1),y
	lda     _moves
	sec
	sbc     #$02
	sta     _moves
L0404:	ldy     #$03
	lda     (sp),y
	cmp     #$FF
	bne     L042A
	dey
	lda     (sp),y
	cmp     #$FD
	bne     L042A
	jsr     _drawBoard
	lda     #$03
	jsr     pusha0
	lda     #$07
	jsr     pusha0
	lda     #<(L041E)
	ldx     #>(L041E)
	jsr     pushax
	jsr     _textxy
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
	lda     #<(_s)
	ldx     #>(_s)
	jsr     pushax
	lda     #<(_brd)
	ldx     #>(_brd)
	jsr     pushax
	lda     #<(_cs)
	ldx     #>(_cs)
	jsr     pushax
	lda     #$02
	jsr     pusha0
	jsr     _makemove
	jsr     stax0sp
L042B:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L042B
L042A:	lda     #<(_brd)
	ldx     #>(_brd)
	jsr     pushax
	lda     #$02
	jsr     pusha0
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	jsr     _legal
	stx     tmp1
	ora     tmp1
	bne     L033F
	lda     _reset
	jeq     L0524
L033F:	lda     _reset
	jne     L0335
	ldy     #$03
	jsr     ldaxysp
	txa
	bmi     L0437
	ldx     #$00
	lda     _moves
	jsr     decax1
	jsr     aslax1
	clc
	adc     #<(_lastplayed)
	sta     ptr1
	txa
	adc     #>(_lastplayed)
	sta     ptr1+1
	ldy     #$03
	jsr     ldaxysp
	sta     (ptr1)
	ldy     #$01
	txa
	sta     (ptr1),y
	lda     #<(_brd)
	ldx     #>(_brd)
	jsr     pushax
	lda     #$02
	jsr     pusha0
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	jsr     _gb_place
	lda     _moves
	ina
	sta     _moves
L0437:	jsr     _drawBoard
	lda     #$06
	jsr     pusha0
	ina
	jsr     pusha0
	lda     #<(L0445)
	ldx     #>(L0445)
	jsr     pushax
	jsr     _textxy
	ldx     #$00
	lda     _moves
	cmp     #$0A
	bcs     L0529
	lda     #$02
	bra     L044C
L0529:	txa
L044C:	ldy     #$2B
	jsr     incaxy
	jsr     pushax
	lda     #$10
	jsr     pusha0
	lda     #<(L044F)
	ldx     #>(L044F)
	jsr     pushax
	jsr     _textxy
	lda     #<(_gbuf)
	ldx     #>(_gbuf)
	jsr     pushax
	lda     #<(L0453)
	ldx     #>(L0453)
	jsr     pushax
	lda     _moves
	jsr     pusha0
	ldy     #$06
	jsr     _sprintf
	ldx     #$00
	lda     _moves
	cmp     #$0A
	bcs     L052A
	lda     #$02
	bra     L045B
L052A:	txa
L045B:	ldy     #$41
	jsr     incaxy
	jsr     pushax
	lda     #$10
	jsr     pusha0
	lda     #<(_gbuf)
	ldx     #>(_gbuf)
	jsr     pushax
	jsr     _textxy
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L0464:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0464
	lda     #<(_gfx_pal)
	ldx     #>(_gfx_pal)
	jsr     _tgi_setpalette
	lda     #<(_SAMPLE0_FILENR)
	ldx     #>(_SAMPLE0_FILENR)
	jsr     pushax
	jsr     _play_PCM
	lda     #<(_cs)
	ldx     #>(_cs)
	jsr     pushax
	lda     #$02
	jsr     pusha0
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	jsr     _cs_place
	stx     tmp1
	ora     tmp1
	jne     L046C
	lda     #<(_s)
	ldx     #>(_s)
	jsr     pushax
	lda     #<(_brd)
	ldx     #>(_brd)
	jsr     pushax
	lda     #<(_cs)
	ldx     #>(_cs)
	jsr     pushax
	lda     #$01
	jsr     pusha0
	jsr     _makemove
	ldy     #$02
	jsr     staxysp
	ldx     #$00
	lda     _moves
	jsr     decax1
	jsr     aslax1
	clc
	adc     #<(_lastplayed)
	sta     ptr1
	txa
	adc     #>(_lastplayed)
	sta     ptr1+1
	ldy     #$03
	jsr     ldaxysp
	sta     (ptr1)
	ldy     #$01
	txa
	sta     (ptr1),y
	lda     _moves
	ina
	sta     _moves
	lda     #<(_SAMPLE0_FILENR)
	ldx     #>(_SAMPLE0_FILENR)
	jsr     pushax
	jsr     _play_PCM
	lda     #<(_brd)
	ldx     #>(_brd)
	jsr     pushax
	lda     #$01
	jsr     pusha0
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	jsr     _gb_place
	lda     #<(_cs)
	ldx     #>(_cs)
	jsr     pushax
	lda     #$01
	jsr     pusha0
	ldy     #$06
	lda     (sp),y
	jsr     pusha
	jsr     _cs_place
	stx     tmp1
	ora     tmp1
	beq     L0335
	lda     #$01
	bra     L051E
L046C:	lda     #$02
L051E:	sta     _brd+1
L0335:	lda     #<(_brd)
	ldx     #>(_brd)
	jsr     pushax
	jsr     _gb_gameover
	stx     tmp1
	ora     tmp1
	bne     L052B
	lda     _reset
	jeq     L0333
L052B:	lda     #$10
	ldy     #$0A
	jmp     L051F
L048D:	jsr     _drawBoard
	lda     _brd+1
	cmp     #$02
	bne     L052C
	lda     #$07
	jsr     pusha0
	jsr     pusha0
	lda     #<(L0499)
	ldx     #>(L0499)
	bra     L0537
L052C:	lda     _brd+1
	cmp     #$01
	bne     L052D
	lda     #$05
	jsr     pusha0
	lda     #$07
	jsr     pusha0
	lda     #<(L04A1)
	ldx     #>(L04A1)
	bra     L0537
L052D:	lda     #$0D
	jsr     pusha0
	lda     #$07
	jsr     pusha0
	lda     #<(L04A7)
	ldx     #>(L04A7)
L0537:	jsr     pushax
	jsr     _textxy
	ldy     #$0A
	lda     (sp),y
	pha
	ina
	sta     (sp),y
	pla
	and     #$10
	beq     L04A9
	lda     #$03
	jsr     pusha0
	lda     #$5D
	jsr     pusha0
	lda     #<(L04AE)
	ldx     #>(L04AE)
	jsr     pushax
	jsr     _textxy
L04A9:	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L04B5:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L04B5
	jsr     _checkInput
	ldy     #$06
	sta     (sp),y
	lda     _joy_masks+4
	and     (sp),y
	pha
	pla
	beq     L0538
	dey
	lda     (sp),y
	bne     L04BB
	ina
	dey
	sta     (sp),y
L04BB:	ldy     #$06
L0538:	lda     (sp),y
	bne     L048F
	dey
L051F:	sta     (sp),y
L048F:	ldy     #$04
	lda     (sp),y
	bne     L0531
	lda     _reset
	jeq     L048D
L0531:	stz     _ingame
	ldy     #$0B
	lda     (sp),y
	jsr     pusha
	ldy     #$0D
	lda     (sp),y
	jsr     pusha0
	lda     #$18
	jsr     tosumula0
	jsr     pusha
	lda     _brd+1
	cmp     #$02
	bne     L0535
	dea
	bra     L04D1
L0535:	lda     #$02
L04D1:	jsr     pusha
	lda     _moves
	jsr     pusha0
	jsr     _newRank
	ldy     #$0D
	jmp     addysp

.endproc

