;
; File generated by cc65 v 2.13.9
;
	.fopt		compiler,"cc65 v 2.13.9"
	.setcpu		"65C02"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.import		_lynx_comlynx
	.import		_tgi_static_stddrv
	.import		_tgi_install
	.import		_tgi_init
	.import		_tgi_clear
	.import		_tgi_setpalette
	.import		_tgi_ioctl
	.import		_joy_static_stddrv
	.import		_joy_install
	.import		_clock
	.import		_ser_install
	.import		_ser_open
	.export		_nop90_redir
	.export		_nop90_pal
	.export		_title_redir
	.export		_title_pal
	.export		_gerk0_redir
	.export		_gerk0_pal
	.import		_SAMPLE3_FILENR
	.import		_SAMPLE4_FILENR
	.import		_gerk0
	.import		_gerk1
	.import		_gerk2
	.import		_gerk3
	.import		_gerk4
	.import		_gerk5
	.import		_nop90
	.import		_title
	.import		_lynx_snd_init
	.import		_play_PCM
	.import		_fade_in
	.import		_fade_out
	.export		_sp_fade
	.export		_sp_title
	.export		_sp_gerk
	.export		_gerk
	.export		_intro

.segment	"INTRO_DATA"

_nop90_redir:
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_nop90_pal:
	.byte	$03
	.byte	$04
	.byte	$04
	.byte	$04
	.byte	$05
	.byte	$07
	.byte	$08
	.byte	$09
	.byte	$09
	.byte	$0A
	.byte	$0B
	.byte	$0B
	.byte	$0D
	.byte	$0E
	.byte	$0F
	.byte	$0F
	.byte	$00
	.byte	$00
	.byte	$10
	.byte	$10
	.byte	$21
	.byte	$43
	.byte	$65
	.byte	$76
	.byte	$87
	.byte	$87
	.byte	$98
	.byte	$A9
	.byte	$CB
	.byte	$ED
	.byte	$FE
	.byte	$FF
_title_redir:
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_title_pal:
	.byte	$00
	.byte	$04
	.byte	$03
	.byte	$05
	.byte	$06
	.byte	$06
	.byte	$07
	.byte	$08
	.byte	$08
	.byte	$0B
	.byte	$0A
	.byte	$0C
	.byte	$0C
	.byte	$0E
	.byte	$00
	.byte	$0D
	.byte	$00
	.byte	$43
	.byte	$14
	.byte	$16
	.byte	$56
	.byte	$19
	.byte	$58
	.byte	$2B
	.byte	$79
	.byte	$2F
	.byte	$5D
	.byte	$2F
	.byte	$6F
	.byte	$CF
	.byte	$00
	.byte	$9F
_gerk0_redir:
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_gerk0_pal:
	.byte	$0F
	.byte	$03
	.byte	$09
	.byte	$0A
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$FF
	.byte	$33
	.byte	$1F
	.byte	$6D
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
_sp_fade:
	.byte	$C0
	.byte	$10
	.byte	$01
	.word	$0000
	.addr	_nop90
	.word	$0000
	.word	$0000
	.word	$0100
	.word	$0100
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_sp_title:
	.byte	$C0
	.byte	$10
	.byte	$01
	.word	$0000
	.addr	_title
	.word	$0000
	.word	$0000
	.word	$0100
	.word	$0100
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_sp_gerk:
	.byte	$C4
	.byte	$10
	.byte	$01
	.word	$0000
	.addr	_gerk0
	.word	$0000
	.word	$0000
	.word	$0100
	.word	$0100
	.byte	$01
	.byte	$23
	.byte	$45
	.byte	$67
	.byte	$89
	.byte	$AB
	.byte	$CD
	.byte	$EF
_black_pal:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00

; ---------------------------------------------------------------
; void __near__ gerk (void)
; ---------------------------------------------------------------

.segment	"INTRO_CODE"

.proc	_gerk: near

.segment	"INTRO_CODE"

	jsr     decsp4
	jsr     _tgi_clear
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L00EE:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L00EE
	lda     #<(_gerk0_pal)
	ldx     #>(_gerk0_pal)
	jsr     _tgi_setpalette
	ldx     #$00
	lda     #$3C
	sta     _sp_gerk+7
	stz     _sp_gerk+7+1
	lda     #$0A
	sta     _sp_gerk+9
	stz     _sp_gerk+9+1
	txa
	ldy     #$02
	jsr     staxysp
L00F8:	ldy     #$03
	lda     (sp),y
	cmp     #$01
	bne     L00FF
	dey
	lda     (sp),y
	cmp     #$01
L00FF:	jcs     L00F9
	jsr     _tgi_clear
	lda     #$00
	sec
	ldy     #$02
	sbc     (sp),y
	pha
	lda     #$01
	iny
	sbc     (sp),y
	tax
	pla
	jsr     shrax2
	ldy     #$3C
	jsr     incaxy
	sta     _sp_gerk+7
	stx     _sp_gerk+7+1
	lda     #$00
	sec
	ldy     #$02
	sbc     (sp),y
	pha
	lda     #$01
	iny
	sbc     (sp),y
	tax
	pla
	jsr     shrax2
	ldy     #$0A
	jsr     incaxy
	sta     _sp_gerk+9
	stx     _sp_gerk+9+1
	ldy     #$03
	jsr     ldaxysp
	sta     _sp_gerk+11
	stx     _sp_gerk+11+1
	ldy     #$03
	jsr     ldaxysp
	sta     _sp_gerk+13
	stx     _sp_gerk+13+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L0117:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0117
	ldy     #$02
	tax
	lda     #$04
	jsr     addeqysp
	jmp     L00F8
L00F9:	ldx     #$00
	txa
L02A3:	jsr     stax0sp
	ldy     #$01
	lda     (sp),y
	cmp     #$00
	bne     L0122
	lda     (sp)
	cmp     #$81
L0122:	jcs     L011C
	jsr     _tgi_clear
	lda     #<(_gerk1)
	sta     _sp_gerk+5
	lda     #>(_gerk1)
	sta     _sp_gerk+5+1
	lda     #$3C
	sta     _sp_gerk+7
	stz     _sp_gerk+7+1
	lda     #$0A
	sta     _sp_gerk+9
	stz     _sp_gerk+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #<(_gerk4)
	sta     _sp_gerk+5
	lda     #>(_gerk4)
	sta     _sp_gerk+5+1
	lda     #$3C
	sta     _sp_gerk+7
	stz     _sp_gerk+7+1
	lda     #$0A
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	cmp     #$16
	txa
	sbc     #$00
	lda     #$00
	bcc     L013B
	ldy     #$03
	lda     (sp),y
	cmp     #$00
	bne     L0137
	dey
	lda     (sp),y
	cmp     #$2A
L0137:	bcc     L0287
	lda     #$00
	bra     L013B
L0287:	lda     #$02
L013B:	jsr     tossuba0
	sta     _sp_gerk+9
	stx     _sp_gerk+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #<(_gerk2)
	sta     _sp_gerk+5
	lda     #>(_gerk2)
	sta     _sp_gerk+5+1
	ldy     #$01
	lda     (sp),y
	cmp     #$00
	bne     L0146
	lda     (sp)
	cmp     #$15
L0146:	bcs     L0147
	ldx     #$FF
	bra     L02A6
L0147:	ldx     #$00
L02A6:	txa
	ldy     #$3C
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	jsr     ldax0sp
	cmp     #$2B
	txa
	sbc     #$00
	lda     #$00
	bcc     L02A1
	ina
	clc
L02A1:	adc     ptr1
	ldx     ptr1+1
	bcc     L0283
	inx
L0283:	sta     _sp_gerk+7
	stx     _sp_gerk+7+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #<(_gerk3)
	sta     _sp_gerk+5
	lda     #>(_gerk3)
	sta     _sp_gerk+5+1
	lda     #$3C
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	cmp     #$21
	txa
	sbc     #$00
	lda     #$00
	bcc     L015F
	ldy     #$03
	lda     (sp),y
	cmp     #$00
	bne     L015B
	dey
	lda     (sp),y
	cmp     #$40
L015B:	bcc     L028C
	lda     #$00
	bra     L015F
L028C:	lda     #$05
L015F:	jsr     tossuba0
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	cmp     #$61
	txa
	sbc     #$00
	lda     #$00
	bcc     L0165
	lda     #$05
L0165:	jsr     tossuba0
	sta     _sp_gerk+7
	stx     _sp_gerk+7+1
	lda     #$0A
	sta     _sp_gerk+9
	stz     _sp_gerk+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L0171:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0171
	jsr     ldax0sp
	ina
	jne     L02A3
	inx
	jmp     L02A3
L011C:	lda     #<(_SAMPLE3_FILENR)
	ldx     #>(_SAMPLE3_FILENR)
	jsr     pushax
	jsr     _play_PCM
	ldx     #$00
	txa
L02A4:	jsr     stax0sp
	ldy     #$01
	lda     (sp),y
	cmp     #$00
	bne     L017E
	lda     (sp)
	cmp     #$40
L017E:	jcs     L0178
	jsr     _tgi_clear
	lda     #<(_gerk1)
	sta     _sp_gerk+5
	lda     #>(_gerk1)
	sta     _sp_gerk+5+1
	lda     #$3C
	sta     _sp_gerk+7
	stz     _sp_gerk+7+1
	lda     #$0A
	sta     _sp_gerk+9
	stz     _sp_gerk+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #<(_gerk2)
	sta     _sp_gerk+5
	lda     #>(_gerk2)
	sta     _sp_gerk+5+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #<(_gerk3)
	sta     _sp_gerk+5
	lda     #>(_gerk3)
	sta     _sp_gerk+5+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #<(_gerk4)
	sta     _sp_gerk+5
	lda     #>(_gerk4)
	sta     _sp_gerk+5+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #<(_gerk5)
	sta     _sp_gerk+5
	lda     #>(_gerk5)
	sta     _sp_gerk+5+1
	lda     #$0A
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	cmp     #$11
	txa
	sbc     #$00
	lda     #$00
	bcc     L01A5
	ldy     #$03
	lda     (sp),y
	cmp     #$00
	bne     L01A1
	dey
	lda     (sp),y
	cmp     #$20
L01A1:	bcc     L0291
	lda     #$00
	bra     L01A5
L0291:	lda     #$05
L01A5:	jsr     tossuba0
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	cmp     #$31
	txa
	sbc     #$00
	lda     #$00
	bcc     L01AB
	lda     #$05
L01AB:	jsr     tossuba0
	sta     _sp_gerk+7
	stx     _sp_gerk+7+1
	lda     #$16
	sta     _sp_gerk+9
	stz     _sp_gerk+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L01B7:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L01B7
	jsr     ldax0sp
	ina
	jne     L02A4
	inx
	jmp     L02A4
L0178:	ldx     #$00
	txa
L02A5:	jsr     stax0sp
	ldy     #$01
	lda     (sp),y
	cmp     #$00
	bne     L01C2
	lda     (sp)
	cmp     #$81
L01C2:	jcs     L01BC
	jsr     _tgi_clear
	lda     #<(_gerk1)
	sta     _sp_gerk+5
	lda     #>(_gerk1)
	sta     _sp_gerk+5+1
	lda     #$3C
	sta     _sp_gerk+7
	stz     _sp_gerk+7+1
	lda     #$0A
	sta     _sp_gerk+9
	stz     _sp_gerk+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #<(_gerk4)
	sta     _sp_gerk+5
	lda     #>(_gerk4)
	sta     _sp_gerk+5+1
	lda     #$3C
	sta     _sp_gerk+7
	stz     _sp_gerk+7+1
	lda     #$0A
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	cmp     #$16
	txa
	sbc     #$00
	lda     #$00
	bcc     L01DB
	ldy     #$03
	lda     (sp),y
	cmp     #$00
	bne     L01D7
	dey
	lda     (sp),y
	cmp     #$2A
L01D7:	bcc     L0296
	lda     #$00
	bra     L01DB
L0296:	lda     #$02
L01DB:	jsr     tossuba0
	sta     _sp_gerk+9
	stx     _sp_gerk+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #<(_gerk2)
	sta     _sp_gerk+5
	lda     #>(_gerk2)
	sta     _sp_gerk+5+1
	ldy     #$01
	lda     (sp),y
	cmp     #$00
	bne     L01E6
	lda     (sp)
	cmp     #$15
L01E6:	bcs     L01E7
	ldx     #$FF
	bra     L02A7
L01E7:	ldx     #$00
L02A7:	txa
	ldy     #$3C
	jsr     incaxy
	sta     ptr1
	stx     ptr1+1
	jsr     ldax0sp
	cmp     #$2B
	txa
	sbc     #$00
	lda     #$00
	bcc     L02A2
	ina
	clc
L02A2:	adc     ptr1
	ldx     ptr1+1
	bcc     L0284
	inx
L0284:	sta     _sp_gerk+7
	stx     _sp_gerk+7+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #<(_gerk3)
	sta     _sp_gerk+5
	lda     #>(_gerk3)
	sta     _sp_gerk+5+1
	lda     #$3C
	jsr     pusha0
	ldy     #$03
	jsr     ldaxysp
	cmp     #$21
	txa
	sbc     #$00
	lda     #$00
	bcc     L01FF
	ldy     #$03
	lda     (sp),y
	cmp     #$00
	bne     L01FB
	dey
	lda     (sp),y
	cmp     #$40
L01FB:	bcc     L029B
	lda     #$00
	bra     L01FF
L029B:	lda     #$05
L01FF:	jsr     tossuba0
	jsr     pushax
	ldy     #$03
	jsr     ldaxysp
	cmp     #$61
	txa
	sbc     #$00
	lda     #$00
	bcc     L0205
	lda     #$05
L0205:	jsr     tossuba0
	sta     _sp_gerk+7
	stx     _sp_gerk+7+1
	lda     #$0A
	sta     _sp_gerk+9
	stz     _sp_gerk+9+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L0211:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0211
	jsr     ldax0sp
	ina
	jne     L02A5
	inx
	jmp     L02A5
L01BC:	lda     #<(_gerk0)
	sta     _sp_gerk+5
	lda     #>(_gerk0)
	sta     _sp_gerk+5+1
	lda     #$3C
	sta     _sp_gerk+7
	stz     _sp_gerk+7+1
	lda     #$0A
	sta     _sp_gerk+9
	stz     _sp_gerk+9+1
	bra     L021D
L021B:	jsr     _tgi_clear
	lda     #$00
	jsr     pusha
	lda     #<(_sp_gerk)
	ldx     #>(_sp_gerk)
	jsr     _tgi_ioctl
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L0229:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0229
	lda     #$04
	clc
	adc     _sp_gerk+7
	sta     _sp_gerk+7
	bcc     L021D
	inc     _sp_gerk+7+1
L021D:	lda     _sp_gerk+7
	cmp     #$AA
	lda     _sp_gerk+7+1
	sbc     #$00
	bvc     L021F
	eor     #$80
L021F:	bmi     L021B
	jmp     incsp4

.endproc

; ---------------------------------------------------------------
; void __near__ intro (void)
; ---------------------------------------------------------------

.segment	"INTRO_CODE"

.proc	_intro: near

.segment	"INTRO_RODATA"

L0231:
	.byte	$15
	.byte	$03
	.byte	$00
	.byte	$01
	.byte	$00

.segment	"INTRO_CODE"

	ldy     #$09
	jsr     subysp
	ldy     #$04
L0237:	lda     L0231,y
	sta     (sp),y
	dey
	bpl     L0237
	lda     #<(_tgi_static_stddrv)
	ldx     #>(_tgi_static_stddrv)
	jsr     _tgi_install
	jsr     _tgi_init
	lda     #$03
	jsr     pusha
	ldx     #$00
	lda     #$3C
	jsr     _tgi_ioctl
	lda     #<(_joy_static_stddrv)
	ldx     #>(_joy_static_stddrv)
	jsr     _joy_install
	lda     #<(_lynx_comlynx)
	ldx     #>(_lynx_comlynx)
	jsr     _ser_install
	ldy     #$00
	jsr     _lynx_snd_init
	cli
	lda     sp
	ldx     sp+1
	jsr     _ser_open
	jsr     _gerk
L024B:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L024B
	lda     #<(_black_pal)
	ldx     #>(_black_pal)
	jsr     _tgi_setpalette
	lda     #<(_nop90)
	sta     _sp_fade+5
	lda     #>(_nop90)
	sta     _sp_fade+5+1
	lda     #$00
	jsr     pusha
	lda     #<(_sp_fade)
	ldx     #>(_sp_fade)
	jsr     _tgi_ioctl
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L025B:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L025B
	lda     #<(_nop90_pal)
	ldx     #>(_nop90_pal)
	jsr     pushax
	lda     #$64
	jsr     _fade_in
	jsr     _clock
	ldy     #$05
	jsr     steaxysp
L0266:	jsr     _clock
	jsr     pusheax
	ldy     #$0C
	jsr     ldeaxysp
	ldy     #$78
	jsr     inceaxy
	jsr     tosulteax
	bne     L0266
	lda     #$64
	jsr     _fade_out
	lda     #$00
	jsr     pusha
	lda     #<(_sp_title)
	ldx     #>(_sp_title)
	jsr     _tgi_ioctl
	lda     #$04
	jsr     pusha
	ldx     #$00
	lda     #$01
	jsr     _tgi_ioctl
L0272:	lda     #$04
	jsr     pusha
	ldx     #$00
	txa
	jsr     _tgi_ioctl
	stx     tmp1
	ora     tmp1
	bne     L0272
	lda     #<(_title_pal)
	ldx     #>(_title_pal)
	jsr     pushax
	lda     #$64
	jsr     _fade_in
	lda     #<(_SAMPLE4_FILENR)
	ldx     #>(_SAMPLE4_FILENR)
	jsr     pushax
	jsr     _play_PCM
	jsr     _clock
	ldy     #$05
	jsr     steaxysp
L027F:	jsr     _clock
	jsr     pusheax
	ldy     #$0C
	jsr     ldeaxysp
	ldy     #$78
	jsr     inceaxy
	jsr     tosulteax
	bne     L027F
	lda     #$64
	jsr     _fade_out
	ldy     #$09
	jmp     addysp

.endproc

